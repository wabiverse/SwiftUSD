#usda 1.0
(
    doc = "SwiftUSD v24.08.0"
)

def Xform "Geometry"
{
    float3 xformOp:scale = (5, 5, 5)
    double3 xformOp:translate = (0, 5, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Sphere "Sphere" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/RedMaterial>
        double3 xformOp:translate = (0, 0, -5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Capsule "Capsule" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/YellowMaterial>
        float xformOp:rotateX = -90
        double3 xformOp:translate = (0, 0, -10)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateX"]
    }

    def Cylinder "Cylinder" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/GreenMaterial>
        float xformOp:rotateX = -90
        uniform token[] xformOpOrder = ["xformOp:rotateX"]
    }

    def Cube "Cube" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/BlueMaterial>
        double3 xformOp:translate = (0, 0, 5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cone "Cone" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/PurpleMaterial>
        float xformOp:rotateX = -90
        double3 xformOp:translate = (0, 0, 10)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateX"]
    }
}

def "Materials"
{
    def Material "RedMaterial"
    {
        token outputs:surface.connect = </Materials/RedMaterial/PBRShader.outputs:surface>

        def Shader "PBRShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.992, 0.207, 0.061)
            float inputs:metallic = 0
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Material "YellowMaterial"
    {
        token outputs:surface.connect = </Materials/YellowMaterial/PBRShader.outputs:surface>

        def Shader "PBRShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.95, 0.8, 0)
            float inputs:metallic = 0
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Material "GreenMaterial"
    {
        token outputs:surface.connect = </Materials/GreenMaterial/PBRShader.outputs:surface>

        def Shader "PBRShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0, 0.766, 0.014)
            float inputs:metallic = 0
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Material "BlueMaterial"
    {
        token outputs:surface.connect = </Materials/BlueMaterial/PBRShader.outputs:surface>

        def Shader "PBRShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.132, 0.218, 0.932)
            float inputs:metallic = 0
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Material "PurpleMaterial"
    {
        token outputs:surface.connect = </Materials/PurpleMaterial/PBRShader.outputs:surface>

        def Shader "PBRShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.531, 0.122, 0.922)
            float inputs:metallic = 0
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }
}

