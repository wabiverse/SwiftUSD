//
// Copyright 2023 Pixar
//
// Licensed under the terms set forth in the LICENSE.txt file available at
// https://openusd.org/license.
//
////////////////////////////////////////////////////////////////////////

/* ************************************************************************** */
/* **                                                                      ** */
/* ** This file is generated by a script.                                  ** */
/* **                                                                      ** */
/* ** Do not edit it directly (unless it is within a CUSTOM CODE section)! ** */
/* ** Edit hdSchemaDefs.py instead to make changes.                        ** */
/* **                                                                      ** */
/* ************************************************************************** */

#include "Hd/lightSchema.h"

#include "Hd/retainedDataSource.h"

#include "Trace/traceImpl.h"

// --(BEGIN CUSTOM CODE: Includes)--
// --(END CUSTOM CODE: Includes)--

PXR_NAMESPACE_OPEN_SCOPE

TF_DEFINE_PUBLIC_TOKENS(HdLightSchemaTokens, HD_LIGHT_SCHEMA_TOKENS);

// --(BEGIN CUSTOM CODE: Schema Methods)--
// --(END CUSTOM CODE: Schema Methods)--

/*static*/
HdLightSchema HdLightSchema::GetFromParent(const HdContainerDataSourceHandle &fromParentContainer)
{
  return HdLightSchema(fromParentContainer ? HdContainerDataSource::Cast(fromParentContainer->Get(
                                                 HdLightSchemaTokens->light)) :
                                             nullptr);
}

/*static*/
const TfToken &HdLightSchema::GetSchemaToken()
{
  return HdLightSchemaTokens->light;
}

/*static*/
const HdDataSourceLocator &HdLightSchema::GetDefaultLocator()
{
  static const HdDataSourceLocator locator(GetSchemaToken());
  return locator;
}

PXR_NAMESPACE_CLOSE_SCOPE
