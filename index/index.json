{"includedArchiveIdentifiers":["swiftusd.PixarUSD"],"interfaceLanguages":{"swift":[{"children":[{"title":"Pixar Foundation","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/arch\/alignmemory(of:)-3fqhz","title":"static func alignMemory(of: Int) -> Int","type":"method"},{"path":"\/documentation\/pixarusd\/arch\/alignmemory(of:)-5pjj4","title":"static func alignMemory(of: UnsafeMutableRawPointer!) -> UnsafeMutableRawPointer!","type":"method"},{"path":"\/documentation\/pixarusd\/arch\/alignedalloc(bytecount:alignment:)","title":"static func alignedAlloc(byteCount: Int, alignment: Int) -> UnsafeMutableRawPointer!","type":"method"},{"path":"\/documentation\/pixarusd\/arch\/alignedfree(pointer:)","title":"static func alignedFree(pointer: inout UnsafeMutableRawPointer!)","type":"method"},{"path":"\/documentation\/pixarusd\/arch\/getcwd()","title":"static func getCwd() -> String","type":"method"},{"path":"\/documentation\/pixarusd\/arch\/getexecutablepath()","title":"static func getExecutablePath() -> String","type":"method"},{"path":"\/documentation\/pixarusd\/arch\/getpagesize()","title":"static func getPageSize() -> Int","type":"method"},{"path":"\/documentation\/pixarusd\/arch\/ismainthread()","title":"static func isMainThread() -> Bool","type":"method"}],"path":"\/documentation\/pixarusd\/arch","title":"Arch","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/tf\/token","title":"Tf.Token","type":"typealias"}],"path":"\/documentation\/pixarusd\/tf","title":"Tf","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/js\/array","title":"Js.Array","type":"typealias"},{"path":"\/documentation\/pixarusd\/js\/object","title":"Js.Object","type":"typealias"},{"path":"\/documentation\/pixarusd\/js\/parseerror","title":"Js.ParseError","type":"typealias"},{"path":"\/documentation\/pixarusd\/js\/value","title":"Js.Value","type":"typealias"}],"path":"\/documentation\/pixarusd\/js","title":"Js","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/gf\/matrix4d","title":"Gf.Matrix4d","type":"typealias"},{"path":"\/documentation\/pixarusd\/gf\/vec2d","title":"Gf.Vec2d","type":"typealias"},{"path":"\/documentation\/pixarusd\/gf\/vec2f","title":"Gf.Vec2f","type":"typealias"},{"path":"\/documentation\/pixarusd\/gf\/vec3d","title":"Gf.Vec3d","type":"typealias"},{"path":"\/documentation\/pixarusd\/gf\/vec3f","title":"Gf.Vec3f","type":"typealias"},{"path":"\/documentation\/pixarusd\/gf\/vec3i","title":"Gf.Vec3i","type":"typealias"},{"path":"\/documentation\/pixarusd\/gf\/vec4d","title":"Gf.Vec4d","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/gf\/abs(_:)-8g06v","title":"static func abs(Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/abs(_:)-8mzxh","title":"static func abs(Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/ceil(_:)-2hupa","title":"static func ceil(Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/ceil(_:)-2ougs","title":"static func ceil(Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/clamp(_:_:_:)-2s8d9","title":"static func clamp(Double, Double, Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/clamp(_:_:_:)-dd0q","title":"static func clamp(Float, Float, Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/cos(_:)-90ji7","title":"static func cos(Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/cos(_:)-98n4d","title":"static func cos(Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/degreestoradians(angle:)","title":"static func degreesToRadians(angle: Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/exp(_:)-3wj5t","title":"static func exp(Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/exp(_:)-43e5v","title":"static func exp(Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/floor(_:)-5tng6","title":"static func floor(Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/floor(_:)-61r6s","title":"static func floor(Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/isclose(_:_:within:)","title":"static func isClose(Double, Double, within: Double) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/log(_:)-mkpw","title":"static func log(Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/log(_:)-sgvq","title":"static func log(Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/mod(_:_:)-3e5h1","title":"static func mod(Double, Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/mod(_:_:)-5xpw2","title":"static func mod(Float, Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/pow(_:_:)-5ukth","title":"static func pow(Double, Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/pow(_:_:)-9b8yf","title":"static func pow(Float, Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/radianstodegrees(angle:)","title":"static func radiansToDegrees(angle: Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/round(_:)-8q76d","title":"static func round(Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/round(_:)-8x71j","title":"static func round(Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/sin(_:)-8poby","title":"static func sin(Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/sin(_:)-8wod8","title":"static func sin(Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/sincos(_:_:_:)-1cgp2","title":"static func sinCos(Float, inout Float, inout Float)","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/sincos(_:_:_:)-7ld12","title":"static func sinCos(Double, inout Double, inout Double)","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/sqr(_:)-2qoww","title":"static func sqr(Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/sqr(_:)-44td0","title":"static func sqr(Float) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/sqr(_:)-587mh","title":"static func sqr(Int) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/sqr(_:)-7b60e","title":"static func sqr(GfVec2f) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/sqr(_:)-8fi55","title":"static func sqr(GfVec3f) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/sqrt(_:)-18re","title":"static func sqrt(Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/gf\/sqrt(_:)-9sqj3","title":"static func sqrt(Double) -> Double","type":"method"}],"path":"\/documentation\/pixarusd\/gf","title":"Gf","type":"enum"},{"path":"\/documentation\/pixarusd\/trace","title":"Trace","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/vt\/floatarray","title":"Vt.FloatArray","type":"typealias"},{"path":"\/documentation\/pixarusd\/vt\/value","title":"Vt.Value","type":"typealias"},{"path":"\/documentation\/pixarusd\/vt\/vec3farray","title":"Vt.Vec3fArray","type":"typealias"}],"path":"\/documentation\/pixarusd\/vt","title":"Vt","type":"enum"},{"path":"\/documentation\/pixarusd\/work","title":"Work","type":"enum"},{"path":"\/documentation\/pixarusd\/plug","title":"Plug","type":"enum"},{"title":"Scene Description","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/ar\/defaultresolver","title":"Ar.DefaultResolver","type":"typealias"},{"path":"\/documentation\/pixarusd\/ar\/resolver","title":"Ar.Resolver","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/ar\/getallresolvers()","title":"static func getAllResolvers() -> [String]","type":"method"}],"path":"\/documentation\/pixarusd\/ar","title":"Ar","type":"enum"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/kind\/tokens\/assembly","title":"case assembly","type":"case"},{"path":"\/documentation\/pixarusd\/kind\/tokens\/component","title":"case component","type":"case"},{"path":"\/documentation\/pixarusd\/kind\/tokens\/group","title":"case group","type":"case"},{"path":"\/documentation\/pixarusd\/kind\/tokens\/model","title":"case model","type":"case"},{"path":"\/documentation\/pixarusd\/kind\/tokens\/subcomponent","title":"case subcomponent","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/kind\/tokens\/gettoken()","title":"func getToken() -> Tf.Token","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/kind\/tokens\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/kind\/tokens\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/kind\/tokens","title":"Kind.Tokens","type":"enum"}],"path":"\/documentation\/pixarusd\/kind","title":"Kind","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/sdf\/layer","title":"Sdf.Layer","type":"typealias"},{"path":"\/documentation\/pixarusd\/sdf\/layerhandle","title":"Sdf.LayerHandle","type":"typealias"},{"path":"\/documentation\/pixarusd\/sdf\/path","title":"Sdf.Path","type":"typealias"},{"path":"\/documentation\/pixarusd\/sdf\/valuetypename","title":"Sdf.ValueTypeName","type":"typealias"},{"path":"\/documentation\/pixarusd\/sdf\/valuetypenametype","title":"Sdf.ValueTypeNameType","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/sdf\/getvaluetype(for:)","title":"static func getValueType(for: SdfValueTypeNameType) -> Sdf.ValueTypeName","type":"method"}],"path":"\/documentation\/pixarusd\/sdf","title":"Sdf","type":"enum"},{"path":"\/documentation\/pixarusd\/pcp","title":"Pcp","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usd\/attribute","title":"Usd.Attribute","type":"typealias"},{"path":"\/documentation\/pixarusd\/usd\/prim","title":"Usd.Prim","type":"typealias"},{"path":"\/documentation\/pixarusd\/usd\/primrange","title":"Usd.PrimRange","type":"typealias"},{"path":"\/documentation\/pixarusd\/usd\/primsiblingrange","title":"Usd.PrimSiblingRange","type":"typealias"},{"path":"\/documentation\/pixarusd\/usd\/stage","title":"Usd.Stage","type":"typealias"},{"path":"\/documentation\/pixarusd\/usd\/stagerefptr","title":"Usd.StageRefPtr","type":"typealias"},{"path":"\/documentation\/pixarusd\/usd\/stageweakptr","title":"Usd.StageWeakPtr","type":"typealias"},{"path":"\/documentation\/pixarusd\/usd\/timecode","title":"Usd.TimeCode","type":"typealias"}],"path":"\/documentation\/pixarusd\/usd","title":"Usd","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/ndr\/node","title":"Ndr.Node","type":"typealias"}],"path":"\/documentation\/pixarusd\/ndr","title":"Ndr","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/sdr\/shadernode","title":"Sdr.ShaderNode","type":"typealias"}],"path":"\/documentation\/pixarusd\/sdr","title":"Sdr","type":"enum"},{"path":"\/documentation\/pixarusd\/sdrosl","title":"SdrOsl","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdgeom\/basiscurves","title":"UsdGeom.BasisCurves","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/camera","title":"UsdGeom.Camera","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/capsule","title":"UsdGeom.Capsule","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/cone","title":"UsdGeom.Cone","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/cube","title":"UsdGeom.Cube","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/curves","title":"UsdGeom.Curves","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/cylinder","title":"UsdGeom.Cylinder","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/mesh","title":"UsdGeom.Mesh","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/nurbscurves","title":"UsdGeom.NurbsCurves","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/nurbspatch","title":"UsdGeom.NurbsPatch","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/plane","title":"UsdGeom.Plane","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/points","title":"UsdGeom.Points","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/sphere","title":"UsdGeom.Sphere","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/subset","title":"UsdGeom.Subset","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/xform","title":"UsdGeom.Xform","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/xformop","title":"UsdGeom.XformOp","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeom\/xformable","title":"UsdGeom.Xformable","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/basiscurves","title":"case basisCurves","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/boundable","title":"case boundable","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/camera","title":"case camera","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/capsule","title":"case capsule","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/cone","title":"case cone","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/cube","title":"case cube","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/curves","title":"case curves","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/cylinder","title":"case cylinder","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/geommodelapi","title":"case geomModelAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/geomsubset","title":"case geomSubset","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/gprim","title":"case gprim","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/hermitecurves","title":"case hermiteCurves","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/imageable","title":"case imageable","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/mesh","title":"case mesh","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/motionapi","title":"case motionAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/nurbscurves","title":"case nurbsCurves","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/nurbspatch","title":"case nurbsPatch","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/plane","title":"case plane","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/pointbased","title":"case pointBased","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/pointinstancer","title":"case pointInstancer","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/points","title":"case points","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/primvarsapi","title":"case primvarsAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/scope","title":"case scope","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/sphere","title":"case sphere","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/visibilityapi","title":"case visibilityAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/xform","title":"case xform","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/xformcommonapi","title":"case xformCommonAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/xformable","title":"case xformable","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/token","title":"var token: Tf.Token","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/usdgeom\/tokens\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/usdgeom\/tokens","title":"UsdGeom.Tokens","type":"enum"}],"path":"\/documentation\/pixarusd\/usdgeom","title":"UsdGeom","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdshade\/attributetype","title":"UsdShade.AttributeType","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshade\/connectableapi","title":"UsdShade.ConnectableAPI","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshade\/input","title":"UsdShade.Input","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshade\/material","title":"UsdShade.Material","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshade\/materialbindingapi","title":"UsdShade.MaterialBindingAPI","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshade\/output","title":"UsdShade.Output","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshade\/shader","title":"UsdShade.Shader","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/allpurpose","title":"case allPurpose","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/bindmaterialas","title":"case bindMaterialAs","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/connectableapi","title":"case connectableAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/coordsys","title":"case coordSys","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/coordsysapi","title":"case coordSysAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/coordsys_multipleapplytemplate_binding","title":"case coordSys_MultipleApplyTemplate_Binding","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/displacement","title":"case displacement","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/fallbackstrength","title":"case fallbackStrength","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/full","title":"case full","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/id","title":"case id","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/infoid","title":"case infoId","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/infoimplementationsource","title":"case infoImplementationSource","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/inputs","title":"case inputs","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/interfaceonly","title":"case interfaceOnly","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/material","title":"case material","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/materialbind","title":"case materialBind","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/materialbinding","title":"case materialBinding","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/materialbindingapi","title":"case materialBindingAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/materialbindingcollection","title":"case materialBindingCollection","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/materialvariant","title":"case materialVariant","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/nodedefapi","title":"case nodeDefAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/nodegraph","title":"case nodeGraph","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/outputs","title":"case outputs","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/outputsdisplacement","title":"case outputsDisplacement","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/outputssurface","title":"case outputsSurface","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/outputsvolume","title":"case outputsVolume","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/preview","title":"case preview","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/sdrmetadata","title":"case sdrMetadata","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/shader","title":"case shader","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/sourceasset","title":"case sourceAsset","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/sourcecode","title":"case sourceCode","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/strongerthandescendants","title":"case strongerThanDescendants","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/subidentifier","title":"case subIdentifier","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/surface","title":"case surface","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/universalrendercontext","title":"case universalRenderContext","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/universalsourcetype","title":"case universalSourceType","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/volume","title":"case volume","type":"case"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/weakerthandescendants","title":"case weakerThanDescendants","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/gettoken()","title":"func getToken() -> Tf.Token","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdshade\/tokens\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/usdshade\/tokens\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/usdshade\/tokens","title":"UsdShade.Tokens","type":"enum"}],"path":"\/documentation\/pixarusd\/usdshade","title":"UsdShade","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdlux\/cylinderlight","title":"UsdLux.CylinderLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdlux\/disklight","title":"UsdLux.DiskLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdlux\/distantlight","title":"UsdLux.DistantLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdlux\/domelight","title":"UsdLux.DomeLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdlux\/geometrylight","title":"UsdLux.GeometryLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdlux\/luxlightapi","title":"UsdLux.LuxLightAPI","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdlux\/meshlightapi","title":"UsdLux.MeshLightAPI","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdlux\/portallight","title":"UsdLux.PortalLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdlux\/rectlight","title":"UsdLux.RectLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdlux\/spherelight","title":"UsdLux.SphereLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdlux\/volumelightapi","title":"UsdLux.VolumeLightAPI","type":"typealias"}],"path":"\/documentation\/pixarusd\/usdlux","title":"UsdLux","type":"enum"},{"path":"\/documentation\/pixarusd\/usdabc","title":"UsdAbc","type":"enum"},{"path":"\/documentation\/pixarusd\/usddraco","title":"UsdDraco","type":"enum"},{"path":"\/documentation\/pixarusd\/usdhydra","title":"UsdHydra","type":"enum"},{"path":"\/documentation\/pixarusd\/usdmedia","title":"UsdMedia","type":"enum"},{"path":"\/documentation\/pixarusd\/usdmtlx","title":"UsdMtlx","type":"enum"},{"path":"\/documentation\/pixarusd\/usdphysics","title":"UsdPhysics","type":"enum"},{"path":"\/documentation\/pixarusd\/usdproc","title":"UsdProc","type":"enum"},{"path":"\/documentation\/pixarusd\/usdrender","title":"UsdRender","type":"enum"},{"path":"\/documentation\/pixarusd\/usdri","title":"UsdRi","type":"enum"},{"path":"\/documentation\/pixarusd\/usdskel","title":"UsdSkel","type":"enum"},{"path":"\/documentation\/pixarusd\/usdui","title":"UsdUI","type":"enum"},{"path":"\/documentation\/pixarusd\/usdutils","title":"UsdUtils","type":"enum"},{"path":"\/documentation\/pixarusd\/usdvol","title":"UsdVol","type":"enum"},{"title":"Rendering & Imaging","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/hd\/driver","title":"Hd.Driver","type":"typealias"}],"path":"\/documentation\/pixarusd\/hd","title":"Hd","type":"enum"},{"path":"\/documentation\/pixarusd\/hf","title":"Hf","type":"enum"},{"path":"\/documentation\/pixarusd\/camerautil","title":"CameraUtil","type":"enum"},{"path":"\/documentation\/pixarusd\/pxosd","title":"PxOsd","type":"enum"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/msg\/debug(_:)","title":"func debug(Any...)","type":"method"},{"path":"\/documentation\/pixarusd\/msg\/error(_:)","title":"func error(Any...)","type":"method"},{"path":"\/documentation\/pixarusd\/msg\/info(_:)","title":"func info(Any...)","type":"method"},{"path":"\/documentation\/pixarusd\/msg\/point(_:to:)","title":"func point(String, to: Any...)","type":"method"},{"path":"\/documentation\/pixarusd\/msg\/success(_:)","title":"func success(Any...)","type":"method"},{"path":"\/documentation\/pixarusd\/msg\/warn(_:)","title":"func warn(Any...)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/msg\/logger","title":"static let logger: Logger","type":"property"}],"path":"\/documentation\/pixarusd\/msg","title":"Msg","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis\/dimension","title":"static var dimension: Int","type":"property"}],"path":"\/documentation\/pixarusd\/axis","title":"Axis","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/dimensional\/axiscount","title":"AxisCount","type":"associatedtype"}],"path":"\/documentation\/pixarusd\/dimensional","title":"Dimensional","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/geomxformable\/addrotatexop(precision:suffix:invert:)","title":"func addRotateXOp(precision: UsdGeomXformOp.Precision, suffix: Tf.Token, invert: Bool) -> UsdGeomXformOp","type":"method"},{"path":"\/documentation\/pixarusd\/geomxformable\/addrotateyop(precision:suffix:invert:)","title":"func addRotateYOp(precision: UsdGeomXformOp.Precision, suffix: Tf.Token, invert: Bool) -> UsdGeomXformOp","type":"method"},{"path":"\/documentation\/pixarusd\/geomxformable\/addrotatezop(precision:suffix:invert:)","title":"func addRotateZOp(precision: UsdGeomXformOp.Precision, suffix: Tf.Token, invert: Bool) -> UsdGeomXformOp","type":"method"},{"path":"\/documentation\/pixarusd\/geomxformable\/addscaleop(precision:suffix:invert:)","title":"func addScaleOp(precision: UsdGeomXformOp.Precision, suffix: Tf.Token, invert: Bool) -> UsdGeomXformOp","type":"method"},{"path":"\/documentation\/pixarusd\/geomxformable\/addtranslateop(precision:suffix:invert:)","title":"func addTranslateOp(precision: UsdGeomXformOp.Precision, suffix: Tf.Token, invert: Bool) -> UsdGeomXformOp","type":"method"},{"path":"\/documentation\/pixarusd\/geomxformable\/addxformop(type:precision:suffix:invert:)","title":"func addXformOp(type: UsdGeomXformOp.Type, precision: UsdGeomXformOp.Precision, suffix: Tf.Token, invert: Bool) -> UsdGeomXformOp","type":"method"}],"path":"\/documentation\/pixarusd\/geomxformable","title":"GeomXformable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/prim\/children","title":"var children: [any Prim]","type":"property"},{"path":"\/documentation\/pixarusd\/prim\/name","title":"var name: Tf.Token","type":"property"},{"path":"\/documentation\/pixarusd\/prim\/path","title":"var path: Sdf.Path","type":"property"}],"path":"\/documentation\/pixarusd\/prim","title":"Prim","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/scalar\/scalartype","title":"ScalarType","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/scalar\/init()","title":"init()","type":"init"},{"path":"\/documentation\/pixarusd\/scalar\/init(_:)","title":"init(ScalarType)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/scalar\/getarray()","title":"func getArray() -> [ScalarType]","type":"method"},{"path":"\/documentation\/pixarusd\/scalar\/makeiterator()","title":"func makeIterator() -> ScalarIterator<Self>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/scalar\/subscript(_:)","title":"subscript(Int) -> ScalarType","type":"subscript"}],"path":"\/documentation\/pixarusd\/scalar","title":"Scalar","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/stageconvertible\/asprims()","title":"func asPrims() -> [USDPrim]","type":"method"}],"path":"\/documentation\/pixarusd\/stageconvertible","title":"StageConvertible","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/scalariterator\/init(_:)","title":"init(T)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/scalariterator\/next()","title":"func next() -> T.ScalarType?","type":"method"}],"path":"\/documentation\/pixarusd\/scalariterator","title":"ScalarIterator","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/empty\/asprims()","title":"func asPrims() -> [USDPrim]","type":"method"}],"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/empty","title":"USDPrim.Empty","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/init(_:type:children:)","title":"init(String, type: PrimType, children: () -> [USDPrim])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/children","title":"var children: [USDPrim]","type":"property"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/path","title":"var path: Sdf.Path","type":"property"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/type","title":"var type: PrimType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/basiscurves","title":"case basisCurves","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/boundable","title":"case boundable","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/camera","title":"case camera","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/capsule","title":"case capsule","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/cone","title":"case cone","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/cube","title":"case cube","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/curves","title":"case curves","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/cylinder","title":"case cylinder","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/cylinderlight","title":"case cylinderLight","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/disklight","title":"case diskLight","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/distantlight","title":"case distantLight","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/domelight","title":"case domeLight","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/geommodelapi","title":"case geomModelAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/geomsubset","title":"case geomSubset","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/geometrylight","title":"case geometryLight","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/gprim","title":"case gprim","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/group(_:)","title":"case group([USDPrim])","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/hermitecurves","title":"case hermiteCurves","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/imageable","title":"case imageable","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/lightapi","title":"case lightAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/mesh","title":"case mesh","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/meshlightapi","title":"case meshLightAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/motionapi","title":"case motionAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/nurbscurves","title":"case nurbsCurves","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/nurbspatch","title":"case nurbsPatch","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/plane","title":"case plane","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/pointbased","title":"case pointBased","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/pointinstancer","title":"case pointInstancer","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/points","title":"case points","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/portallight","title":"case portalLight","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/primvarsapi","title":"case primvarsAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/rectlight","title":"case rectLight","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/scope","title":"case scope","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/sphere","title":"case sphere","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/spherelight","title":"case sphereLight","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/token(_:)","title":"case token(Tf.Token)","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/visibilityapi","title":"case visibilityAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/volumelightapi","title":"case volumeLightAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/xform","title":"case xform","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/xformcommonapi","title":"case xformCommonAPI","type":"case"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype\/xformable","title":"case xformable","type":"case"}],"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/primtype","title":"USDPrim.PrimType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/==(_:_:)","title":"static func == (USDPrim, USDPrim) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/asprims()","title":"func asPrims() -> [USDPrim]","type":"method"}],"path":"\/documentation\/pixarusd\/usdprim-swift.struct\/stageconvertible-implementations","title":"StageConvertible Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/usdprim-swift.struct","title":"USDPrim","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/init(_:ext:load:prims:)","title":"init(String, ext: USDStage.FileExt, load: Usd.Stage.InitialLoadingSet, prims: () -> [USDPrim])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/prims","title":"var prims: [USDPrim]","type":"property"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/stage","title":"var stage: UsdStageRefPtr","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/save()","title":"func save() -> USDStage","type":"method"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/set(doc:)","title":"func set(doc: String) -> USDStage","type":"method"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/traverse()","title":"func traverse() -> [Usd.Prim]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/fileext\/custom(_:)","title":"case custom(String)","type":"case"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/fileext\/usd","title":"case usd","type":"case"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/fileext\/usda","title":"case usda","type":"case"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/fileext\/usdc","title":"case usdc","type":"case"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/fileext\/usdz","title":"case usdz","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/fileext\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/fileext\/allcases","title":"static var allCases: [USDStage.FileExt]","type":"property"}],"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/fileext","title":"USDStage.FileExt","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/asprims()","title":"func asPrims() -> [USDPrim]","type":"method"}],"path":"\/documentation\/pixarusd\/usdstage-swift.struct\/stageconvertible-implementations","title":"StageConvertible Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/usdstage-swift.struct","title":"USDStage","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/pxr_major_version","title":"var PXR_MAJOR_VERSION: Int32","type":"var"},{"path":"\/documentation\/pixarusd\/pxr_minor_version","title":"var PXR_MINOR_VERSION: Int32","type":"var"},{"path":"\/documentation\/pixarusd\/pxr_patch_version","title":"var PXR_PATCH_VERSION: Int32","type":"var"},{"path":"\/documentation\/pixarusd\/pxr_prefer_safety_over_speed","title":"var PXR_PREFER_SAFETY_OVER_SPEED: Int32","type":"var"},{"path":"\/documentation\/pixarusd\/pxr_python_support_enabled","title":"var PXR_PYTHON_SUPPORT_ENABLED: Int32","type":"var"},{"path":"\/documentation\/pixarusd\/pxr_use_namespaces","title":"var PXR_USE_NAMESPACES: Int32","type":"var"},{"path":"\/documentation\/pixarusd\/pxr_version","title":"var PXR_VERSION: Int32","type":"var"},{"path":"\/documentation\/pixarusd\/swiftusd_evolution","title":"var SWIFTUSD_EVOLUTION: Int32","type":"var"},{"title":"Macros","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/xformable()","title":"macro Xformable()","type":"macro"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/ardefaultresolver","title":"ArDefaultResolver","type":"typealias"},{"path":"\/documentation\/pixarusd\/arresolver","title":"ArResolver","type":"typealias"},{"path":"\/documentation\/pixarusd\/gfmatrix4d","title":"GfMatrix4d","type":"typealias"},{"path":"\/documentation\/pixarusd\/gfvec2d","title":"GfVec2d","type":"typealias"},{"path":"\/documentation\/pixarusd\/gfvec2f","title":"GfVec2f","type":"typealias"},{"path":"\/documentation\/pixarusd\/gfvec3d","title":"GfVec3d","type":"typealias"},{"path":"\/documentation\/pixarusd\/gfvec3f","title":"GfVec3f","type":"typealias"},{"path":"\/documentation\/pixarusd\/gfvec3i","title":"GfVec3i","type":"typealias"},{"path":"\/documentation\/pixarusd\/gfvec4d","title":"GfVec4d","type":"typealias"},{"path":"\/documentation\/pixarusd\/hddriver","title":"HdDriver","type":"typealias"},{"path":"\/documentation\/pixarusd\/jsarray","title":"JsArray","type":"typealias"},{"path":"\/documentation\/pixarusd\/jsobject","title":"JsObject","type":"typealias"},{"path":"\/documentation\/pixarusd\/jsparseerror","title":"JsParseError","type":"typealias"},{"path":"\/documentation\/pixarusd\/jsvalue","title":"JsValue","type":"typealias"},{"path":"\/documentation\/pixarusd\/ndrnode","title":"NdrNode","type":"typealias"},{"path":"\/documentation\/pixarusd\/sdflayer","title":"SdfLayer","type":"typealias"},{"path":"\/documentation\/pixarusd\/sdflayerhandle","title":"SdfLayerHandle","type":"typealias"},{"path":"\/documentation\/pixarusd\/sdfpath","title":"SdfPath","type":"typealias"},{"path":"\/documentation\/pixarusd\/sdfvaluetypename","title":"SdfValueTypeName","type":"typealias"},{"path":"\/documentation\/pixarusd\/sdfvaluetypenametype","title":"SdfValueTypeNameType","type":"typealias"},{"path":"\/documentation\/pixarusd\/sdrshadernode","title":"SdrShaderNode","type":"typealias"},{"path":"\/documentation\/pixarusd\/tftoken","title":"TfToken","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdattribute","title":"UsdAttribute","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeombasiscurves","title":"UsdGeomBasisCurves","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomcamera","title":"UsdGeomCamera","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomcapsule","title":"UsdGeomCapsule","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomcone","title":"UsdGeomCone","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomcube","title":"UsdGeomCube","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomcurves","title":"UsdGeomCurves","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomcylinder","title":"UsdGeomCylinder","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeommesh","title":"UsdGeomMesh","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomnurbscurves","title":"UsdGeomNurbsCurves","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomnurbspatch","title":"UsdGeomNurbsPatch","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomplane","title":"UsdGeomPlane","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeompoints","title":"UsdGeomPoints","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomsphere","title":"UsdGeomSphere","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomsubset","title":"UsdGeomSubset","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomxform","title":"UsdGeomXform","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomxformop","title":"UsdGeomXformOp","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdgeomxformable","title":"UsdGeomXformable","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdluxcylinderlight","title":"UsdLuxCylinderLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdluxdisklight","title":"UsdLuxDiskLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdluxdistantlight","title":"UsdLuxDistantLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdluxdomelight","title":"UsdLuxDomeLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdluxgeometrylight","title":"UsdLuxGeometryLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdluxlightapi","title":"UsdLuxLightAPI","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdluxmeshlightapi","title":"UsdLuxMeshLightAPI","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdluxportallight","title":"UsdLuxPortalLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdluxrectlight","title":"UsdLuxRectLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdluxspherelight","title":"UsdLuxSphereLight","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdluxvolumelightapi","title":"UsdLuxVolumeLightAPI","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdprim-swift.typealias","title":"UsdPrim","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdprimrange","title":"UsdPrimRange","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdprimsiblingrange","title":"UsdPrimSiblingRange","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshadeattributetype","title":"UsdShadeAttributeType","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshadeconnectableapi","title":"UsdShadeConnectableAPI","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshadeinput","title":"UsdShadeInput","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshadematerial","title":"UsdShadeMaterial","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshadematerialbindingapi","title":"UsdShadeMaterialBindingAPI","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshadeoutput","title":"UsdShadeOutput","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdshadeshader","title":"UsdShadeShader","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdstage-swift.typealias","title":"UsdStage","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdstagerefptr","title":"UsdStageRefPtr","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdstageweakptr","title":"UsdStageWeakPtr","type":"typealias"},{"path":"\/documentation\/pixarusd\/usdtimecode","title":"UsdTimeCode","type":"typealias"},{"path":"\/documentation\/pixarusd\/vtfloatarray","title":"VtFloatArray","type":"typealias"},{"path":"\/documentation\/pixarusd\/vtvalue","title":"VtValue","type":"typealias"},{"path":"\/documentation\/pixarusd\/vtvec3farray","title":"VtVec3fArray","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis16\/m00","title":"case m00","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m01","title":"case m01","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m02","title":"case m02","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m03","title":"case m03","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m10","title":"case m10","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m11","title":"case m11","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m12","title":"case m12","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m13","title":"case m13","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m20","title":"case m20","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m21","title":"case m21","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m22","title":"case m22","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m23","title":"case m23","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m30","title":"case m30","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m31","title":"case m31","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m32","title":"case m32","type":"case"},{"path":"\/documentation\/pixarusd\/axis16\/m33","title":"case m33","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis16\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis16\/axiscount","title":"Axis16.AxisCount","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis16\/dimension","title":"static var dimension: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis16\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/axis16\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis16\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis16\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/pixarusd\/axis16\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/axis16","title":"Axis16","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis2\/x","title":"case x","type":"case"},{"path":"\/documentation\/pixarusd\/axis2\/y","title":"case y","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis2\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis2\/getaxis()","title":"func getAxis() -> Int","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis2\/axiscount","title":"Axis2.AxisCount","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis2\/dimension","title":"static var dimension: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis2\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/axis2\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis2\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis2\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/pixarusd\/axis2\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/axis2","title":"Axis2","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis3\/x","title":"case x","type":"case"},{"path":"\/documentation\/pixarusd\/axis3\/y","title":"case y","type":"case"},{"path":"\/documentation\/pixarusd\/axis3\/z","title":"case z","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis3\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis3\/getaxis()","title":"func getAxis() -> Int","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis3\/axiscount","title":"Axis3.AxisCount","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis3\/dimension","title":"static var dimension: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis3\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/axis3\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis3\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis3\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/pixarusd\/axis3\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/axis3","title":"Axis3","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis4\/w","title":"case w","type":"case"},{"path":"\/documentation\/pixarusd\/axis4\/x","title":"case x","type":"case"},{"path":"\/documentation\/pixarusd\/axis4\/y","title":"case y","type":"case"},{"path":"\/documentation\/pixarusd\/axis4\/z","title":"case z","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis4\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis4\/getaxis()","title":"func getAxis() -> Int","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis4\/axiscount","title":"Axis4.AxisCount","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis4\/dimension","title":"static var dimension: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis4\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/axis4\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis4\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/axis4\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/pixarusd\/axis4\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/axis4","title":"Axis4","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/bundleframework\/ar","title":"case ar","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/glf","title":"case glf","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/hd","title":"case hd","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/hgigl","title":"case hgiGL","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/hgimetal","title":"case hgiMetal","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/hgivulkan","title":"case hgiVulkan","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/hio","title":"case hio","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/ndr","title":"case ndr","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/sdf","title":"case sdf","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/sdrosl","title":"case sdrOsl","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usd","title":"case usd","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdabc","title":"case usdAbc","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usddraco","title":"case usdDraco","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdgeom","title":"case usdGeom","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdhydra","title":"case usdHydra","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdlux","title":"case usdLux","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdmedia","title":"case usdMedia","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdmtlx","title":"case usdMtlx","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdphysics","title":"case usdPhysics","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdproc","title":"case usdProc","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdrender","title":"case usdRender","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdri","title":"case usdRi","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdshade","title":"case usdShade","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdshaders","title":"case usdShaders","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdskel","title":"case usdSkel","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdui","title":"case usdUI","type":"case"},{"path":"\/documentation\/pixarusd\/bundleframework\/usdvol","title":"case usdVol","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/bundleframework\/resourcepath","title":"var resourcePath: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/bundleframework\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/bundleframework\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/bundleframework","title":"BundleFramework","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/bundlekind\/resources","title":"case resources","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/bundlekind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/bundlekind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/bundlekind","title":"BundleKind","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyar","title":"case pyAr","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pycamerautil","title":"case pyCameraUtil","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pygarch","title":"case pyGarch","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pygeomutil","title":"case pyGeomUtil","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pygf","title":"case pyGf","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyglf","title":"case pyGlf","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pykind","title":"case pyKind","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyndr","title":"case pyNdr","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pypcp","title":"case pyPcp","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyplug","title":"case pyPlug","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pypxosd","title":"case pyPxOsd","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pysdf","title":"case pySdf","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pysdr","title":"case pySdr","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pysdrosl","title":"case pySdrOsl","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pytf","title":"case pyTf","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pytrace","title":"case pyTrace","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusd","title":"case pyUsd","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdabc","title":"case pyUsdAbc","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusddraco","title":"case pyUsdDraco","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdgeom","title":"case pyUsdGeom","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdhydra","title":"case pyUsdHydra","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdlux","title":"case pyUsdLux","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdmedia","title":"case pyUsdMedia","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdmtlx","title":"case pyUsdMtlx","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdphysics","title":"case pyUsdPhysics","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdproc","title":"case pyUsdProc","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdrender","title":"case pyUsdRender","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdri","title":"case pyUsdRi","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdshade","title":"case pyUsdShade","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdshaders","title":"case pyUsdShaders","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdskel","title":"case pyUsdSkel","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdui","title":"case pyUsdUI","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdutils","title":"case pyUsdUtils","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyusdvol","title":"case pyUsdVol","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pyvt","title":"case pyVt","type":"case"},{"path":"\/documentation\/pixarusd\/bundlepython\/pywork","title":"case pyWork","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/bundlepython\/resourcepath","title":"var resourcePath: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/bundlepython\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/bundlepython\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/bundlepython","title":"BundlePython","type":"enum"},{"path":"\/documentation\/pixarusd\/garch","title":"Garch","type":"enum"},{"path":"\/documentation\/pixarusd\/geomutil","title":"GeomUtil","type":"enum"},{"path":"\/documentation\/pixarusd\/glf","title":"Glf","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/hgi\/createplatformdefaulthgi()","title":"static func createPlatformDefaultHgi() -> Pixar.Hgi","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/hgi\/tokens\/renderdriver","title":"case renderDriver","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/hgi\/tokens\/token","title":"var token: Tf.Token","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/hgi\/tokens\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/hgi\/tokens\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/hgi\/tokens","title":"Hgi.Tokens","type":"enum"}],"path":"\/documentation\/pixarusd\/hgi","title":"Hgi","type":"enum"},{"path":"\/documentation\/pixarusd\/hgigl","title":"HgiGL","type":"enum"},{"path":"\/documentation\/pixarusd\/hgiinterop","title":"HgiInterop","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/hgimetal\/createhgi()","title":"static func createHgi() -> Pixar.HgiMetalPtr","type":"method"}],"path":"\/documentation\/pixarusd\/hgimetal","title":"HgiMetal","type":"enum"},{"path":"\/documentation\/pixarusd\/hio","title":"Hio","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/stagebuilder\/buildblock(_:)","title":"static func buildBlock(StageConvertible...) -> [USDPrim]","type":"method"},{"path":"\/documentation\/pixarusd\/stagebuilder\/buildeither(first:)","title":"static func buildEither(first: StageConvertible) -> StageConvertible","type":"method"},{"path":"\/documentation\/pixarusd\/stagebuilder\/buildeither(second:)","title":"static func buildEither(second: StageConvertible) -> StageConvertible","type":"method"},{"path":"\/documentation\/pixarusd\/stagebuilder\/buildif(_:)","title":"static func buildIf(StageConvertible?) -> StageConvertible","type":"method"}],"path":"\/documentation\/pixarusd\/stagebuilder","title":"StageBuilder","type":"enum"},{"path":"\/documentation\/pixarusd\/usdshaders","title":"UsdShaders","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/ar","title":"static let ar: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/ext","title":"static let ext: String","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/glf","title":"static let glf: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/hd","title":"static let hd: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/hgigl","title":"static let hgiGL: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/hgimetal","title":"static let hgiMetal: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/hgivulkan","title":"static let hgiVulkan: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/hio","title":"static let hio: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/ndr","title":"static let ndr: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pxrroot","title":"static let pxrRoot: String","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyar","title":"static let pyAr: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pycamerautil","title":"static let pyCameraUtil: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pygarch","title":"static let pyGarch: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pygeomutil","title":"static let pyGeomUtil: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pygf","title":"static let pyGf: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyglf","title":"static let pyGlf: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pykind","title":"static let pyKind: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyndr","title":"static let pyNdr: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pypcp","title":"static let pyPcp: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyplug","title":"static let pyPlug: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pypxosd","title":"static let pyPxOsd: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pysdf","title":"static let pySdf: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pysdr","title":"static let pySdr: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pysdrosl","title":"static let pySdrOsl: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pytf","title":"static let pyTf: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pytrace","title":"static let pyTrace: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusd","title":"static let pyUsd: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdabc","title":"static let pyUsdAbc: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusddraco","title":"static let pyUsdDraco: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdgeom","title":"static let pyUsdGeom: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdhydra","title":"static let pyUsdHydra: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdlux","title":"static let pyUsdLux: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdmedia","title":"static let pyUsdMedia: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdmtlx","title":"static let pyUsdMtlx: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdphysics","title":"static let pyUsdPhysics: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdproc","title":"static let pyUsdProc: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdrender","title":"static let pyUsdRender: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdri","title":"static let pyUsdRi: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdshade","title":"static let pyUsdShade: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdshaders","title":"static let pyUsdShaders: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdskel","title":"static let pyUsdSkel: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdui","title":"static let pyUsdUI: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdutils","title":"static let pyUsdUtils: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyusdvol","title":"static let pyUsdVol: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pyvt","title":"static let pyVt: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/pywork","title":"static let pyWork: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/sdf","title":"static let sdf: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/sdrosl","title":"static let sdrOsl: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usd","title":"static let usd: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdabc","title":"static let usdAbc: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usddraco","title":"static let usdDraco: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdgeom","title":"static let usdGeom: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdhydra","title":"static let usdHydra: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdlux","title":"static let usdLux: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdmedia","title":"static let usdMedia: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdmtlx","title":"static let usdMtlx: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdphysics","title":"static let usdPhysics: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdproc","title":"static let usdProc: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdrender","title":"static let usdRender: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdri","title":"static let usdRi: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdshade","title":"static let usdShade: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdshaders","title":"static let usdShaders: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdskel","title":"static let usdSkel: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdui","title":"static let usdUI: Bundle?","type":"property"},{"path":"\/documentation\/pixarusd\/foundation\/bundle\/usdvol","title":"static let usdVol: Bundle?","type":"property"}],"path":"\/documentation\/pixarusd\/foundation\/bundle","title":"Bundle","type":"extension"}],"path":"\/documentation\/pixarusd\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/swift\/array\/asprims()","title":"func asPrims() -> [USDPrim]","type":"method"}],"path":"\/documentation\/pixarusd\/swift\/array\/stageconvertible-implementations","title":"StageConvertible Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/swift\/array","title":"Array","type":"extension"}],"path":"\/documentation\/pixarusd\/swift","title":"Swift","type":"extension"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/bundler\/setup(_:installplugins:)","title":"func setup(BundleKind, installPlugins: Bool)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/bundler\/shared","title":"static let shared: Bundler","type":"property"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/bundler","title":"Pixar.Bundler","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/version","title":"static let version: String","type":"property"},{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/hgimetal\/apiversion","title":"var apiVersion: Int","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/hgimetal\/device","title":"var device: MTL.Device","type":"property"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/hgimetal","title":"Pixar.HgiMetal","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/defineprim(_:type:)-3v76n","title":"func definePrim(String, type: Tf.Token) -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/defineprim(_:type:)-71vxd","title":"func definePrim(Sdf.Path, type: Tf.Token) -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/getmetadata(_:_:)-1in1","title":"func getMetadata(String, inout Float) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/getmetadata(_:_:)-8k725","title":"func getMetadata(String, inout Double) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/getmetadata(_:_:)-8r6m8","title":"func getMetadata(String, inout Int) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/getmetadata(_:_:)-947cn","title":"func getMetadata(String, inout Tf.Token) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/getprim(at:)-8ivsw","title":"func getPrim(at: String) -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/getprim(at:)-9763k","title":"func getPrim(at: Sdf.Path) -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/getpseudoroot()","title":"func getPseudoRoot() -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/getrootlayer()","title":"func getRootLayer() -> SdfLayerHandle","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/hasauthoredmetadata(_:)","title":"func hasAuthoredMetadata(String) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/overrideprim(path:)-6utt8","title":"func overridePrim(path: Sdf.Path) -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/overrideprim(path:)-9cf5t","title":"func overridePrim(path: String) -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/reload()","title":"func reload()","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/save()","title":"func save()","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/setmetadata(_:_:)-2pp39","title":"func setMetadata(String, Double) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/setmetadata(_:_:)-2y3vv","title":"func setMetadata(String, Float) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/setmetadata(_:_:)-37py2","title":"func setMetadata(String, Int) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/setmetadata(_:_:)-v6uj","title":"func setMetadata(String, Tf.Token) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/traverse()","title":"func traverse() -> [Usd.Prim]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/createnew(_:ext:load:)","title":"static func createNew(String, ext: USDStage.FileExt, load: InitialLoadingSet) -> UsdStageRefPtr","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/createnew(_:load:)","title":"static func createNew(String, load: InitialLoadingSet) -> UsdStageRefPtr","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/open(_:load:)","title":"static func open(String, load: InitialLoadingSet) -> UsdStageRefPtr","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/initialloadingset\/all","title":"case all","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/initialloadingset\/none","title":"case none","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/initialloadingset\/rawvalue","title":"var rawValue: InitialLoadSet","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/initialloadingset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/initialloadingset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage\/initialloadingset","title":"Pixar.UsdStage.InitialLoadingSet","type":"enum"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdstage","title":"Pixar.UsdStage","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/init(_:)-26fjg","title":"init(SIMD16<Scalar>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/simd","title":"var simd: SIMD16<Scalar>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/getcolumn(_:)","title":"func getColumn(Int) -> Gf.Vec4d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/getorthonormalized(warn:)","title":"func getOrthonormalized(warn: Bool) -> Pixar.GfMatrix4d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/getrow(_:)","title":"func getRow(Int) -> Gf.Vec4d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/orthonormalize(warn:)","title":"func orthonormalize(warn: Bool) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/set(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)","title":"func set(Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double) -> Pixar.GfMatrix4d","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/simdstorage","title":"Pixar.GfMatrix4d.SIMDStorage","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/axiscount","title":"Pixar.GfMatrix4d.AxisCount","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/dimensional-implementations","title":"Dimensional Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/*(_:_:)-2kb8r","title":"static func * (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/*(_:_:)-6ccfs","title":"static func * (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/*(_:_:)-832cc","title":"static func * (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/*=(_:_:)-69orv","title":"static func *= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/*=(_:_:)-9yrz9","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/+(_:_:)-40hmv","title":"static func + (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/+(_:_:)-9j4gg","title":"static func + (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/+(_:_:)-9tr0l","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/+=(_:_:)-4d7iv","title":"static func += (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/+=(_:_:)-8gq95","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/-(_:)","title":"static func - (Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/-(_:_:)-6klx9","title":"static func - (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/-(_:_:)-7nli1","title":"static func - (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/-(_:_:)-9cyf8","title":"static func - (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/-=(_:_:)-6lohp","title":"static func -= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/-=(_:_:)-8wyr4","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'.!=(_:_:)-2lrbi","title":"static func .!= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'.!=(_:_:)-2xspm","title":"static func .!= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'.!=(_:_:)-7h08g","title":"static func .!= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'.==(_:_:)-54if2","title":"static func .== (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'.==(_:_:)-58bcl","title":"static func .== (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'.==(_:_:)-8d2d7","title":"static func .== (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'._(_:_:)-1zitz","title":"static func .> (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'._(_:_:)-2y8wx","title":"static func .< (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'._(_:_:)-3refl","title":"static func .> (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'._(_:_:)-4hv9q","title":"static func .> (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'._(_:_:)-59rnt","title":"static func .< (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'._(_:_:)-8as5t","title":"static func .< (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'._=(_:_:)-27ud2","title":"static func .<= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'._=(_:_:)-2a16j","title":"static func .<= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'._=(_:_:)-2dzjx","title":"static func .>= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'._=(_:_:)-3h0hp","title":"static func .>= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'._=(_:_:)-4otfl","title":"static func .<= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/'._=(_:_:)-abrk","title":"static func .>= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/_(_:_:)-8k2yh","title":"static func \/ (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/_(_:_:)-8v1f9","title":"static func \/ (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/_(_:_:)-9sr27","title":"static func \/ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/_=(_:_:)-1ihze","title":"static func \/= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/_=(_:_:)-5gp24","title":"static func \/= (inout Self, Self.Scalar)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/init(_:)-3jl3h","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Scalar...)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/init(repeating:)","title":"init(repeating: Self.Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/indices","title":"var indices: Range<Int>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/addproduct(_:_:)-1osbd","title":"func addProduct(Self, Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/addproduct(_:_:)-6i1sj","title":"func addProduct(Self, Self.Scalar)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/addproduct(_:_:)-xp8m","title":"func addProduct(Self.Scalar, Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/addingproduct(_:_:)-1othi","title":"func addingProduct(Self, Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/addingproduct(_:_:)-5tscy","title":"func addingProduct(Self, Self.Scalar) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/addingproduct(_:_:)-6ymxu","title":"func addingProduct(Self.Scalar, Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/clamp(lowerbound:upperbound:)-537je","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/clamp(lowerbound:upperbound:)-8c5ep","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/clamped(lowerbound:upperbound:)","title":"func clamped(lowerBound: Self, upperBound: Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/formsquareroot()","title":"func formSquareRoot()","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/max()-3hgpy","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/max()-3r1x5","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/min()-8xiue","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/min()-9zgq6","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/replace(with:where:)-6vj7s","title":"func replace(with: Self, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/replace(with:where:)-9ln1e","title":"func replace(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/replacing(with:where:)-2hcuw","title":"func replacing(with: Self, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/replacing(with:where:)-6m4jn","title":"func replacing(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/round(_:)","title":"func round(FloatingPointRoundingRule)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/rounded(_:)","title":"func rounded(FloatingPointRoundingRule) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/squareroot()","title":"func squareRoot() -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/sum()","title":"func sum() -> Self.Scalar","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/subscript(_:)-552yz","title":"subscript<Index>(SIMD8<Index>) -> SIMD8<Self.Scalar>","type":"subscript"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/subscript(_:)-5z5ic","title":"subscript<Index>(SIMD16<Index>) -> SIMD16<Self.Scalar>","type":"subscript"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/subscript(_:)-6c4gg","title":"subscript<Index>(SIMD3<Index>) -> SIMD3<Self.Scalar>","type":"subscript"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/subscript(_:)-6hagu","title":"subscript<Index>(SIMD4<Index>) -> SIMD4<Self.Scalar>","type":"subscript"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/subscript(_:)-6ji00","title":"subscript<Index>(SIMD64<Index>) -> SIMD64<Self.Scalar>","type":"subscript"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/subscript(_:)-7xyy3","title":"subscript<Index>(SIMD32<Index>) -> SIMD32<Self.Scalar>","type":"subscript"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/subscript(_:)-z9s6","title":"subscript<Index>(SIMD2<Index>) -> SIMD2<Self.Scalar>","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/maskstorage","title":"Pixar.GfMatrix4d.MaskStorage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/one","title":"static var one: Self","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/simd-implementations","title":"SIMD Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/scalar","title":"Pixar.GfMatrix4d.Scalar","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/getarray()","title":"func getArray() -> [ScalarType]","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/subscript(_:)-v2k7","title":"subscript(Int) -> `Self`.Scalar","type":"subscript"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/scalar-implementations","title":"Scalar Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/filter(_:)-6ouc1","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/filter(_:)-85ww5","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/flatmap(_:)-432ek","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/flatmap(_:)-4yu9w","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/makeiterator()","title":"func makeIterator() -> ScalarIterator<`Self`>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/map(_:)","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/max()-659c9","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/min()-8qx5t","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/sorted(using:)-3ruqt","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/sorted(using:)-7sftc","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfmatrix4d","title":"Pixar.GfMatrix4d","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/init(_:)-3yxgd","title":"init(SIMD2<Scalar>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/simd","title":"var simd: SIMD2<Scalar>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/getcomplement(_:)","title":"func getComplement(`Self`) -> Pixar.GfVec2d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/getlength()","title":"func getLength() -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/getlengthsq()","title":"func getLengthSq() -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/getnormalized(_:)","title":"func getNormalized(Double) -> Pixar.GfVec2d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/getprojection(_:)","title":"func getProjection(`Self`) -> Pixar.GfVec2d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/normalize(_:)","title":"func normalize(Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/set(_:)","title":"func set([ScalarType]) -> Pixar.GfVec2d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/set(_:_:)","title":"func set(Double, Double) -> Pixar.GfVec2d","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/simdstorage","title":"Pixar.GfVec2d.SIMDStorage","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/axis(_:)","title":"static func axis(AxisCount) -> Pixar.GfVec2d","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/axiscount","title":"Pixar.GfVec2d.AxisCount","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/dimensional-implementations","title":"Dimensional Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/*(_:_:)-36q9o","title":"static func * (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/*(_:_:)-43gdd","title":"static func * (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/*(_:_:)-q6ik","title":"static func * (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/*=(_:_:)-68k6t","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/*=(_:_:)-8q49w","title":"static func *= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/+(_:_:)-1dea5","title":"static func + (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/+(_:_:)-8wibv","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/+(_:_:)-9j9qv","title":"static func + (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/+=(_:_:)-4ru9a","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/+=(_:_:)-7fokm","title":"static func += (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/-(_:)","title":"static func - (Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/-(_:_:)-21o3g","title":"static func - (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/-(_:_:)-2tknk","title":"static func - (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/-(_:_:)-2u05v","title":"static func - (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/-=(_:_:)-1ncb4","title":"static func -= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/-=(_:_:)-6crho","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'.!=(_:_:)-4q31f","title":"static func .!= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'.!=(_:_:)-6uioj","title":"static func .!= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'.!=(_:_:)-76d20","title":"static func .!= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'.==(_:_:)-4g423","title":"static func .== (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'.==(_:_:)-5lo88","title":"static func .== (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'.==(_:_:)-wkbc","title":"static func .== (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'._(_:_:)-1yjzv","title":"static func .< (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'._(_:_:)-2tmbw","title":"static func .< (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'._(_:_:)-3d95u","title":"static func .< (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'._(_:_:)-418f5","title":"static func .> (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'._(_:_:)-5h0gq","title":"static func .> (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'._(_:_:)-n4fv","title":"static func .> (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'._=(_:_:)-5i8uj","title":"static func .<= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'._=(_:_:)-5u4tp","title":"static func .<= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'._=(_:_:)-69c42","title":"static func .>= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'._=(_:_:)-6p0je","title":"static func .>= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'._=(_:_:)-8z6d4","title":"static func .<= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/'._=(_:_:)-9ue82","title":"static func .>= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/_(_:_:)-17cta","title":"static func \/ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/_(_:_:)-8ah9l","title":"static func \/ (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/_(_:_:)-9xqo8","title":"static func \/ (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/_=(_:_:)-1cfgl","title":"static func \/= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/_=(_:_:)-2ctr6","title":"static func \/= (inout Self, Self)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/init(_:)-8u35i","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Scalar...)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/init(repeating:)","title":"init(repeating: Self.Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/indices","title":"var indices: Range<Int>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/addproduct(_:_:)-15qud","title":"func addProduct(Self, Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/addproduct(_:_:)-1agli","title":"func addProduct(Self, Self.Scalar)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/addproduct(_:_:)-hv3i","title":"func addProduct(Self.Scalar, Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/addingproduct(_:_:)-12hku","title":"func addingProduct(Self, Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/addingproduct(_:_:)-2ceu3","title":"func addingProduct(Self.Scalar, Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/addingproduct(_:_:)-3qg0h","title":"func addingProduct(Self, Self.Scalar) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/clamp(lowerbound:upperbound:)-2xkpf","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/clamp(lowerbound:upperbound:)-3ikgg","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/clamped(lowerbound:upperbound:)","title":"func clamped(lowerBound: Self, upperBound: Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/formsquareroot()","title":"func formSquareRoot()","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/max()-366pt","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/max()-5a5i3","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/min()-2dl56","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/min()-9n42p","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/replace(with:where:)-5co7t","title":"func replace(with: Self, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/replace(with:where:)-72xc","title":"func replace(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/replacing(with:where:)-7vi5w","title":"func replacing(with: Self, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/replacing(with:where:)-99n2n","title":"func replacing(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/round(_:)","title":"func round(FloatingPointRoundingRule)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/rounded(_:)","title":"func rounded(FloatingPointRoundingRule) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/squareroot()","title":"func squareRoot() -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/sum()","title":"func sum() -> Self.Scalar","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/maskstorage","title":"Pixar.GfVec2d.MaskStorage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/one","title":"static var one: Self","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/simd-implementations","title":"SIMD Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/scalar","title":"Pixar.GfVec2d.Scalar","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/getarray()","title":"func getArray() -> [ScalarType]","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/scalar-implementations","title":"Scalar Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/filter(_:)-141hd","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/filter(_:)-8z6d","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/flatmap(_:)-1zzmy","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/flatmap(_:)-8rhuw","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/makeiterator()","title":"func makeIterator() -> ScalarIterator<`Self`>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/map(_:)","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/max()-1irv1","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/min()-6iabp","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/sorted(using:)-1sazu","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/sorted(using:)-9b3ay","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2d","title":"Pixar.GfVec2d","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/init(_:)-2p5r4","title":"init(SIMD2<Scalar>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/simd","title":"var simd: SIMD2<Scalar>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/getcomplement(_:)","title":"func getComplement(`Self`) -> Pixar.GfVec2f","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/getlength()","title":"func getLength() -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/getlengthsq()","title":"func getLengthSq() -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/getnormalized(_:)","title":"func getNormalized(Float) -> Pixar.GfVec2f","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/getprojection(_:)","title":"func getProjection(`Self`) -> Pixar.GfVec2f","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/normalize(_:)","title":"func normalize(Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/set(_:)","title":"func set([ScalarType]) -> Pixar.GfVec2f","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/set(_:_:)","title":"func set(Float, Float) -> Pixar.GfVec2f","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/simdstorage","title":"Pixar.GfVec2f.SIMDStorage","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/axis(_:)","title":"static func axis(AxisCount) -> Pixar.GfVec2f","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/axiscount","title":"Pixar.GfVec2f.AxisCount","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/dimensional-implementations","title":"Dimensional Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/*(_:_:)-36q9q","title":"static func * (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/*(_:_:)-43gdf","title":"static func * (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/*(_:_:)-q6im","title":"static func * (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/*=(_:_:)-68k6v","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/*=(_:_:)-8q49y","title":"static func *= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/+(_:_:)-1dea7","title":"static func + (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/+(_:_:)-8wibt","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/+(_:_:)-9j9qt","title":"static func + (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/+=(_:_:)-4ru98","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/+=(_:_:)-7fokk","title":"static func += (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/-(_:)","title":"static func - (Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/-(_:_:)-21o3i","title":"static func - (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/-(_:_:)-2tknm","title":"static func - (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/-(_:_:)-2u05t","title":"static func - (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/-=(_:_:)-1ncb6","title":"static func -= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/-=(_:_:)-6crhq","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'.!=(_:_:)-4q31d","title":"static func .!= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'.!=(_:_:)-6uioh","title":"static func .!= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'.!=(_:_:)-76d22","title":"static func .!= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'.==(_:_:)-4g421","title":"static func .== (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'.==(_:_:)-5lo8a","title":"static func .== (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'.==(_:_:)-wkbe","title":"static func .== (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'._(_:_:)-1yjzt","title":"static func .< (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'._(_:_:)-2tmby","title":"static func .< (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'._(_:_:)-3d95s","title":"static func .< (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'._(_:_:)-418f7","title":"static func .> (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'._(_:_:)-5h0go","title":"static func .> (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'._(_:_:)-n4ft","title":"static func .> (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'._=(_:_:)-5i8uh","title":"static func .<= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'._=(_:_:)-5u4tr","title":"static func .<= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'._=(_:_:)-69c40","title":"static func .>= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'._=(_:_:)-6p0jc","title":"static func .>= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'._=(_:_:)-8z6d6","title":"static func .<= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/'._=(_:_:)-9ue80","title":"static func .>= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/_(_:_:)-17ct8","title":"static func \/ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/_(_:_:)-8ah9n","title":"static func \/ (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/_(_:_:)-9xqoa","title":"static func \/ (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/_=(_:_:)-1cfgn","title":"static func \/= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/_=(_:_:)-2ctr4","title":"static func \/= (inout Self, Self)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/init(_:)-8u35g","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Scalar...)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/init(repeating:)","title":"init(repeating: Self.Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/indices","title":"var indices: Range<Int>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/addproduct(_:_:)-15quf","title":"func addProduct(Self, Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/addproduct(_:_:)-1aglg","title":"func addProduct(Self, Self.Scalar)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/addproduct(_:_:)-hv3g","title":"func addProduct(Self.Scalar, Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/addingproduct(_:_:)-12hks","title":"func addingProduct(Self, Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/addingproduct(_:_:)-2ceu1","title":"func addingProduct(Self.Scalar, Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/addingproduct(_:_:)-3qg0j","title":"func addingProduct(Self, Self.Scalar) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/clamp(lowerbound:upperbound:)-2xkpd","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/clamp(lowerbound:upperbound:)-3ikgi","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/clamped(lowerbound:upperbound:)","title":"func clamped(lowerBound: Self, upperBound: Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/formsquareroot()","title":"func formSquareRoot()","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/max()-366pv","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/max()-5a5i1","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/min()-2dl54","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/min()-9n42r","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/replace(with:where:)-5co7v","title":"func replace(with: Self, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/replace(with:where:)-72xe","title":"func replace(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/replacing(with:where:)-7vi5y","title":"func replacing(with: Self, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/replacing(with:where:)-99n2l","title":"func replacing(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/round(_:)","title":"func round(FloatingPointRoundingRule)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/rounded(_:)","title":"func rounded(FloatingPointRoundingRule) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/squareroot()","title":"func squareRoot() -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/sum()","title":"func sum() -> Self.Scalar","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/maskstorage","title":"Pixar.GfVec2f.MaskStorage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/one","title":"static var one: Self","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/simd-implementations","title":"SIMD Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/scalar","title":"Pixar.GfVec2f.Scalar","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/getarray()","title":"func getArray() -> [ScalarType]","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/scalar-implementations","title":"Scalar Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/filter(_:)-141hf","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/filter(_:)-8z6f","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/flatmap(_:)-1zzmw","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/flatmap(_:)-8rhuy","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/makeiterator()","title":"func makeIterator() -> ScalarIterator<`Self`>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/map(_:)","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/max()-1irv3","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/min()-6iabr","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/sorted(using:)-1sazs","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/sorted(using:)-9b3aw","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec2f","title":"Pixar.GfVec2f","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/init(_:)-5xsxo","title":"init(SIMD3<Scalar>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/simd","title":"var simd: SIMD3<Scalar>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/getcomplement(_:)","title":"func getComplement(`Self`) -> Pixar.GfVec3d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/getlength()","title":"func getLength() -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/getlengthsq()","title":"func getLengthSq() -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/getnormalized(_:)","title":"func getNormalized(Double) -> Pixar.GfVec3d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/getprojection(_:)","title":"func getProjection(`Self`) -> Pixar.GfVec3d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/normalize(_:)","title":"func normalize(Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/set(_:)","title":"func set([ScalarType]) -> Pixar.GfVec3d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/set(_:_:_:)","title":"func set(Double, Double, Double) -> Pixar.GfVec3d","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/simdstorage","title":"Pixar.GfVec3d.SIMDStorage","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/axis(_:)","title":"static func axis(AxisCount) -> Pixar.GfVec3d","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/axiscount","title":"Pixar.GfVec3d.AxisCount","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/dimensional-implementations","title":"Dimensional Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/*(_:_:)-36pym","title":"static func * (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/*(_:_:)-43ggh","title":"static func * (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/*(_:_:)-q60y","title":"static func * (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/*=(_:_:)-68jvp","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/*=(_:_:)-8q4pi","title":"static func *= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/+(_:_:)-1def1","title":"static func + (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/+(_:_:)-8whxb","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/+(_:_:)-9ja7f","title":"static func + (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/+=(_:_:)-4rujg","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/+=(_:_:)-7foi0","title":"static func += (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/-(_:)","title":"static func - (Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/-(_:_:)-21nri","title":"static func - (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/-(_:_:)-2tkxy","title":"static func - (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/-(_:_:)-2tzvz","title":"static func - (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/-=(_:_:)-1nclq","title":"static func -= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/-=(_:_:)-6crcy","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'.!=(_:_:)-4q34n","title":"static func .!= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'.!=(_:_:)-6uj1j","title":"static func .!= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'.!=(_:_:)-76crq","title":"static func .!= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'.==(_:_:)-4g3k7","title":"static func .== (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'.==(_:_:)-5lnx6","title":"static func .== (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'.==(_:_:)-wkei","title":"static func .== (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'._(_:_:)-1yjgn","title":"static func .< (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'._(_:_:)-2tlwi","title":"static func .< (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'._(_:_:)-3d99s","title":"static func .< (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'._(_:_:)-418ix","title":"static func .> (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'._(_:_:)-5h0js","title":"static func .> (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'._(_:_:)-n4bz","title":"static func .> (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'._=(_:_:)-5i8ef","title":"static func .<= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'._=(_:_:)-5u54t","title":"static func .<= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'._=(_:_:)-69cf4","title":"static func .>= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'._=(_:_:)-6p018","title":"static func .>= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'._=(_:_:)-8z5uu","title":"static func .<= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/'._=(_:_:)-9uepg","title":"static func .>= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/_(_:_:)-17ch8","title":"static func \/ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/_(_:_:)-8ahkp","title":"static func \/ (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/_(_:_:)-9xr5i","title":"static func \/ (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/_=(_:_:)-1cfed","title":"static func \/= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/_=(_:_:)-2cu6o","title":"static func \/= (inout Self, Self)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/init(_:)-8u3m0","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Scalar...)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/init(repeating:)","title":"init(repeating: Self.Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/indices","title":"var indices: Range<Int>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/addproduct(_:_:)-15r5h","title":"func addProduct(Self, Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/addproduct(_:_:)-1agbs","title":"func addProduct(Self, Self.Scalar)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/addproduct(_:_:)-huqk","title":"func addProduct(Self.Scalar, Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/addingproduct(_:_:)-12hu4","title":"func addingProduct(Self, Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/addingproduct(_:_:)-2cej3","title":"func addingProduct(Self.Scalar, Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/addingproduct(_:_:)-3qfpd","title":"func addingProduct(Self, Self.Scalar) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/clamp(lowerbound:upperbound:)-2xl1b","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/clamp(lowerbound:upperbound:)-3il0m","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/clamped(lowerbound:upperbound:)","title":"func clamped(lowerBound: Self, upperBound: Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/formsquareroot()","title":"func formSquareRoot()","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/max()-3669l","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/max()-5a5e7","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/min()-2dl2w","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/min()-9n3rd","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/replace(with:where:)-5coc1","title":"func replace(with: Self, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/replace(with:where:)-72im","title":"func replace(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/replacing(with:where:)-7vikm","title":"func replacing(with: Self, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/replacing(with:where:)-99muz","title":"func replacing(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/round(_:)","title":"func round(FloatingPointRoundingRule)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/rounded(_:)","title":"func rounded(FloatingPointRoundingRule) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/squareroot()","title":"func squareRoot() -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/sum()","title":"func sum() -> Self.Scalar","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/maskstorage","title":"Pixar.GfVec3d.MaskStorage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/one","title":"static var one: Self","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/simd-implementations","title":"SIMD Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/scalar","title":"Pixar.GfVec3d.Scalar","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/getarray()","title":"func getArray() -> [ScalarType]","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/scalar-implementations","title":"Scalar Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/filter(_:)-14175","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/filter(_:)-8zgl","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/flatmap(_:)-1zzbo","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/flatmap(_:)-8riai","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/makeiterator()","title":"func makeIterator() -> ScalarIterator<`Self`>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/map(_:)","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/max()-1irdp","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/min()-6i9ud","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/sorted(using:)-1sb2w","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/sorted(using:)-9b3l0","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3d","title":"Pixar.GfVec3d","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/init(_:)-5bj22","title":"init(SIMD3<Scalar>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/simd","title":"var simd: SIMD3<Scalar>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/getcomplement(_:)","title":"func getComplement(`Self`) -> Pixar.GfVec3f","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/getlength()","title":"func getLength() -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/getlengthsq()","title":"func getLengthSq() -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/getnormalized(_:)","title":"func getNormalized(Float) -> Pixar.GfVec3f","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/getprojection(_:)","title":"func getProjection(`Self`) -> Pixar.GfVec3f","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/normalize(_:)","title":"func normalize(Float) -> Float","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/set(_:)","title":"func set([ScalarType]) -> Pixar.GfVec3f","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/set(_:_:_:)","title":"func set(Float, Float, Float) -> Pixar.GfVec3f","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/simdstorage","title":"Pixar.GfVec3f.SIMDStorage","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/axis(_:)","title":"static func axis(AxisCount) -> Pixar.GfVec3f","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/axiscount","title":"Pixar.GfVec3f.AxisCount","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/dimensional-implementations","title":"Dimensional Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/*(_:_:)-36pyk","title":"static func * (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/*(_:_:)-43ggj","title":"static func * (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/*(_:_:)-q60w","title":"static func * (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/*=(_:_:)-68jvr","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/*=(_:_:)-8q4pg","title":"static func *= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/+(_:_:)-1def3","title":"static func + (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/+(_:_:)-8whx9","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/+(_:_:)-9ja7d","title":"static func + (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/+=(_:_:)-4ruji","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/+=(_:_:)-7foi2","title":"static func += (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/-(_:)","title":"static func - (Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/-(_:_:)-21nrg","title":"static func - (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/-(_:_:)-2tkxw","title":"static func - (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/-(_:_:)-2tzvx","title":"static func - (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/-=(_:_:)-1nclo","title":"static func -= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/-=(_:_:)-6crcw","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'.!=(_:_:)-4q34l","title":"static func .!= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'.!=(_:_:)-6uj1h","title":"static func .!= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'.!=(_:_:)-76cro","title":"static func .!= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'.==(_:_:)-4g3k5","title":"static func .== (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'.==(_:_:)-5lnx4","title":"static func .== (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'.==(_:_:)-wkeg","title":"static func .== (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'._(_:_:)-1yjgl","title":"static func .< (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'._(_:_:)-2tlwg","title":"static func .< (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'._(_:_:)-3d99u","title":"static func .< (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'._(_:_:)-418iz","title":"static func .> (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'._(_:_:)-5h0ju","title":"static func .> (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'._(_:_:)-n4bx","title":"static func .> (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'._=(_:_:)-5i8ed","title":"static func .<= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'._=(_:_:)-5u54v","title":"static func .<= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'._=(_:_:)-69cf6","title":"static func .>= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'._=(_:_:)-6p01a","title":"static func .>= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'._=(_:_:)-8z5us","title":"static func .<= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/'._=(_:_:)-9uepi","title":"static func .>= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/_(_:_:)-17cha","title":"static func \/ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/_(_:_:)-8ahkr","title":"static func \/ (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/_(_:_:)-9xr5g","title":"static func \/ (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/_=(_:_:)-1cfef","title":"static func \/= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/_=(_:_:)-2cu6q","title":"static func \/= (inout Self, Self)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/init(_:)-8u3m2","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Scalar...)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/init(repeating:)","title":"init(repeating: Self.Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/indices","title":"var indices: Range<Int>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/addproduct(_:_:)-15r5j","title":"func addProduct(Self, Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/addproduct(_:_:)-1agbu","title":"func addProduct(Self, Self.Scalar)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/addproduct(_:_:)-huqm","title":"func addProduct(Self.Scalar, Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/addingproduct(_:_:)-12hu6","title":"func addingProduct(Self, Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/addingproduct(_:_:)-2cej1","title":"func addingProduct(Self.Scalar, Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/addingproduct(_:_:)-3qfpf","title":"func addingProduct(Self, Self.Scalar) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/clamp(lowerbound:upperbound:)-2xl19","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/clamp(lowerbound:upperbound:)-3il0k","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/clamped(lowerbound:upperbound:)","title":"func clamped(lowerBound: Self, upperBound: Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/formsquareroot()","title":"func formSquareRoot()","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/max()-3669n","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/max()-5a5e5","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/min()-2dl2y","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/min()-9n3rf","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/replace(with:where:)-5coc3","title":"func replace(with: Self, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/replace(with:where:)-72ik","title":"func replace(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/replacing(with:where:)-7vikk","title":"func replacing(with: Self, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/replacing(with:where:)-99mux","title":"func replacing(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/round(_:)","title":"func round(FloatingPointRoundingRule)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/rounded(_:)","title":"func rounded(FloatingPointRoundingRule) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/squareroot()","title":"func squareRoot() -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/sum()","title":"func sum() -> Self.Scalar","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/maskstorage","title":"Pixar.GfVec3f.MaskStorage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/one","title":"static var one: Self","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/simd-implementations","title":"SIMD Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/scalar","title":"Pixar.GfVec3f.Scalar","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/getarray()","title":"func getArray() -> [ScalarType]","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/scalar-implementations","title":"Scalar Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/filter(_:)-14177","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/filter(_:)-8zgn","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/flatmap(_:)-1zzbq","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/flatmap(_:)-8riag","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/makeiterator()","title":"func makeIterator() -> ScalarIterator<`Self`>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/map(_:)","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/max()-1irdr","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/min()-6i9uf","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/sorted(using:)-1sb2y","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/sorted(using:)-9b3l2","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3f","title":"Pixar.GfVec3f","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/init(_:)-5hey8","title":"init(SIMD3<Scalar>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/simd","title":"var simd: SIMD3<Scalar>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/getcomplement(_:)","title":"func getComplement(`Self`) -> Pixar.GfVec3i","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/getlengthsq()","title":"func getLengthSq() -> Int32","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/getprojection(_:)","title":"func getProjection(`Self`) -> Pixar.GfVec3i","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/set(_:)","title":"func set([ScalarType]) -> Pixar.GfVec3i","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/set(_:_:_:)","title":"func set(Int32, Int32, Int32) -> Pixar.GfVec3i","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/simdstorage","title":"Pixar.GfVec3i.SIMDStorage","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/axis(_:)","title":"static func axis(AxisCount) -> Pixar.GfVec3i","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/axiscount","title":"Pixar.GfVec3i.AxisCount","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/dimensional-implementations","title":"Dimensional Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&(_:_:)-34nl6","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&(_:_:)-9ckkk","title":"static func & (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&(_:_:)-hk3v","title":"static func & (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&*(_:_:)-73gqr","title":"static func &* (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&*(_:_:)-9bnis","title":"static func &* (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&*(_:_:)-9ms65","title":"static func &* (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&*=(_:_:)-5fe3e","title":"static func &*= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&*=(_:_:)-7b37z","title":"static func &*= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&+(_:_:)-3y9hl","title":"static func &+ (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&+(_:_:)-5ne7q","title":"static func &+ (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&+(_:_:)-7cyla","title":"static func &+ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&+=(_:_:)-4uxd2","title":"static func &+= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&+=(_:_:)-7u4bp","title":"static func &+= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&-(_:_:)-51tx2","title":"static func &- (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&-(_:_:)-d54q","title":"static func &- (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&-(_:_:)-x2o3","title":"static func &- (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&-=(_:_:)-19f0k","title":"static func &-= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&-=(_:_:)-8iwjg","title":"static func &-= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&=(_:_:)-7rz82","title":"static func &= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&=(_:_:)-8mwlu","title":"static func &= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&__(_:_:)-15uuo","title":"static func &>> (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&__(_:_:)-1dadl","title":"static func &>> (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&__(_:_:)-5l8i0","title":"static func &>> (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&__(_:_:)-6udqz","title":"static func &<< (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&__(_:_:)-7mvyo","title":"static func &<< (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&__(_:_:)-uay6","title":"static func &<< (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&__=(_:_:)-403z2","title":"static func &<<= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&__=(_:_:)-4fna","title":"static func &>>= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&__=(_:_:)-98eyi","title":"static func &<<= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/&__=(_:_:)-9lw6a","title":"static func &>>= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/*(_:_:)-9ndiz","title":"static func * (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/*(_:_:)-9xmwe","title":"static func * (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/*(_:_:)-gexj","title":"static func * (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/*=(_:_:)-3jzqe","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/*=(_:_:)-7lqci","title":"static func *= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/+(_:_:)-5kdg5","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/+(_:_:)-7ot5n","title":"static func + (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/+(_:_:)-84c35","title":"static func + (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/+=(_:_:)-2xpkn","title":"static func += (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/+=(_:_:)-60h58","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/-(_:_:)-67vl5","title":"static func - (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/-(_:_:)-9cn1h","title":"static func - (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/-(_:_:)-q3co","title":"static func - (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/-=(_:_:)-86rn0","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/-=(_:_:)-8e6n3","title":"static func -= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'.!=(_:_:)-4q34q","title":"static func .!= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'.!=(_:_:)-6uj1m","title":"static func .!= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'.!=(_:_:)-76crv","title":"static func .!= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'.==(_:_:)-4g3ka","title":"static func .== (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'.==(_:_:)-5lnx3","title":"static func .== (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'.==(_:_:)-wkef","title":"static func .== (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'._(_:_:)-1yjgq","title":"static func .< (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'._(_:_:)-2tlwv","title":"static func .< (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'._(_:_:)-3d9a5","title":"static func .< (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'._(_:_:)-418is","title":"static func .> (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'._(_:_:)-5h0jp","title":"static func .> (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'._(_:_:)-n4bm","title":"static func .> (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'._=(_:_:)-5i8ei","title":"static func .<= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'._=(_:_:)-5u54g","title":"static func .<= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'._=(_:_:)-69cfh","title":"static func .>= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'._=(_:_:)-6p00x","title":"static func .>= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'._=(_:_:)-8z5uz","title":"static func .<= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/'._=(_:_:)-9uepl","title":"static func .>= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_(_:_:)-1mk0m","title":"static func | (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_(_:_:)-296m3","title":"static func | (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_(_:_:)-3jnje","title":"static func % (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_(_:_:)-3l5qk","title":"static func % (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_(_:_:)-3sj43","title":"static func ^ (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_(_:_:)-3wjx2","title":"static func \/ (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_(_:_:)-4ady8","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_(_:_:)-4pusu","title":"static func \/ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_(_:_:)-4qaiq","title":"static func \/ (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_(_:_:)-6470w","title":"static func % (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_(_:_:)-6a9o4","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_(_:_:)-8h4si","title":"static func ^ (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_=(_:_:)-1xp75","title":"static func |= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_=(_:_:)-2kft3","title":"static func \/= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_=(_:_:)-2ucox","title":"static func ^= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_=(_:_:)-5d6je","title":"static func |= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_=(_:_:)-8b9oc","title":"static func \/= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_=(_:_:)-8q7k6","title":"static func %= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_=(_:_:)-8wxlg","title":"static func %= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/_=(_:_:)-a48b","title":"static func ^= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/~(_:)","title":"static func ~ (Self) -> Self","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/init(_:)-8u3lx","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Scalar...)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/init(repeating:)","title":"init(repeating: Self.Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/indices","title":"var indices: Range<Int>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/leadingzerobitcount","title":"var leadingZeroBitCount: Self","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/nonzerobitcount","title":"var nonzeroBitCount: Self","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/trailingzerobitcount","title":"var trailingZeroBitCount: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/clamp(lowerbound:upperbound:)","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/clamped(lowerbound:upperbound:)","title":"func clamped(lowerBound: Self, upperBound: Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/max()-5a5du","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/min()-9n3r8","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/replace(with:where:)-5cocc","title":"func replace(with: Self, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/replace(with:where:)-72ib","title":"func replace(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/replacing(with:where:)-7vikr","title":"func replacing(with: Self, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/replacing(with:where:)-99muu","title":"func replacing(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/wrappedsum()","title":"func wrappedSum() -> Self.Scalar","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/maskstorage","title":"Pixar.GfVec3i.MaskStorage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/one","title":"static var one: Self","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/zero","title":"static var zero: Self","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/random(in:)-2pk7k","title":"static func random(in: Range<Self.Scalar>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/random(in:)-904iu","title":"static func random(in: ClosedRange<Self.Scalar>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/random(in:using:)-1ds9g","title":"static func random<T>(in: Range<Self.Scalar>, using: inout T) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/random(in:using:)-3qtpy","title":"static func random<T>(in: ClosedRange<Self.Scalar>, using: inout T) -> Self","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/simd-implementations","title":"SIMD Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/scalar","title":"Pixar.GfVec3i.Scalar","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/getarray()","title":"func getArray() -> [ScalarType]","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/scalar-implementations","title":"Scalar Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/filter(_:)-1417g","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/filter(_:)-8zgo","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/flatmap(_:)-1zzbt","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/flatmap(_:)-8riaf","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/makeiterator()","title":"func makeIterator() -> ScalarIterator<`Self`>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/map(_:)","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/max()-1irdc","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/min()-6i9ug","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/sorted(using:)-1sb2t","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/sorted(using:)-9b3l5","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec3i","title":"Pixar.GfVec3i","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/init(_:)-5nx8t","title":"init(SIMD4<Scalar>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/simd","title":"var simd: SIMD4<Scalar>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/getcomplement(_:)","title":"func getComplement(`Self`) -> Pixar.GfVec4d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/getlength()","title":"func getLength() -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/getlengthsq()","title":"func getLengthSq() -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/getnormalized(_:)","title":"func getNormalized(Double) -> Pixar.GfVec4d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/getprojection(_:)","title":"func getProjection(`Self`) -> Pixar.GfVec4d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/normalize(_:)","title":"func normalize(Double) -> Double","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/set(_:)","title":"func set([ScalarType]) -> Pixar.GfVec4d","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/set(_:_:_:_:)","title":"func set(Double, Double, Double, Double) -> Pixar.GfVec4d","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/simdstorage","title":"Pixar.GfVec4d.SIMDStorage","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/axis(_:)","title":"static func axis(AxisCount) -> Pixar.GfVec4d","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/axiscount","title":"Pixar.GfVec4d.AxisCount","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/dimensional-implementations","title":"Dimensional Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/*(_:_:)-36plk","title":"static func * (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/*(_:_:)-43fid","title":"static func * (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/*(_:_:)-q72w","title":"static func * (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/*=(_:_:)-68jkh","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/*=(_:_:)-8q6cw","title":"static func *= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/+(_:_:)-1dc81","title":"static func + (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/+(_:_:)-8wk37","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/+(_:_:)-9j967","title":"static func + (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/+=(_:_:)-4rthy","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/+=(_:_:)-7fp52","title":"static func += (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/-(_:)","title":"static func - (Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/-(_:_:)-21q0g","title":"static func - (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/-(_:_:)-2tiro","title":"static func - (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/-(_:_:)-2u0p7","title":"static func - (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/-=(_:_:)-1ncxo","title":"static func -= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/-=(_:_:)-6cs3s","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'.!=(_:_:)-4q0y3","title":"static func .!= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'.!=(_:_:)-6ugvf","title":"static func .!= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'.!=(_:_:)-76dto","title":"static func .!= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'.==(_:_:)-4g3jn","title":"static func .== (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'.==(_:_:)-5lnm4","title":"static func .== (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'.==(_:_:)-wm38","title":"static func .== (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'._(_:_:)-1yjdf","title":"static func .< (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'._(_:_:)-2tmy0","title":"static func .< (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'._(_:_:)-3d8my","title":"static func .< (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'._(_:_:)-416d1","title":"static func .> (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'._(_:_:)-5gzlu","title":"static func .> (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'._(_:_:)-n6hv","title":"static func .> (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'._=(_:_:)-5i8b7","title":"static func .<= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'._=(_:_:)-5u41t","title":"static func .<= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'._=(_:_:)-69dze","title":"static func .>= (Self.Scalar, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'._=(_:_:)-6oyf6","title":"static func .>= (Self, Self) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'._=(_:_:)-8z6sc","title":"static func .<= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/'._=(_:_:)-9ucje","title":"static func .>= (Self, Self.Scalar) -> SIMDMask<Self.MaskStorage>","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/_(_:_:)-17c72","title":"static func \/ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/_(_:_:)-8aj2d","title":"static func \/ (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/_(_:_:)-9xr8k","title":"static func \/ (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/_=(_:_:)-1cdsp","title":"static func \/= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/_=(_:_:)-2cvne","title":"static func \/= (inout Self, Self)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/init(_:)-8u3q6","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Scalar...)","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/init(repeating:)","title":"init(repeating: Self.Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/indices","title":"var indices: Range<Int>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/addproduct(_:_:)-15rk1","title":"func addProduct(Self, Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/addproduct(_:_:)-1ah9i","title":"func addProduct(Self, Self.Scalar)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/addproduct(_:_:)-hufi","title":"func addProduct(Self.Scalar, Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/addingproduct(_:_:)-12jfq","title":"func addingProduct(Self, Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/addingproduct(_:_:)-2cd43","title":"func addingProduct(Self.Scalar, Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/addingproduct(_:_:)-3qfg5","title":"func addingProduct(Self, Self.Scalar) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/clamp(lowerbound:upperbound:)-2xml7","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/clamp(lowerbound:upperbound:)-3iiuc","title":"func clamp(lowerBound: Self, upperBound: Self)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/clamped(lowerbound:upperbound:)","title":"func clamped(lowerBound: Self, upperBound: Self) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/formsquareroot()","title":"func formSquareRoot()","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/max()-364nx","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/max()-5a7k3","title":"func max() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/min()-2dkia","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/min()-9n4lh","title":"func min() -> Self.Scalar","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/replace(with:where:)-5cm5p","title":"func replace(with: Self, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/replace(with:where:)-73jo","title":"func replace(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/replacing(with:where:)-7vhjc","title":"func replacing(with: Self, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/replacing(with:where:)-99mjz","title":"func replacing(with: Self.Scalar, where: SIMDMask<Self.MaskStorage>) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/round(_:)","title":"func round(FloatingPointRoundingRule)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/rounded(_:)","title":"func rounded(FloatingPointRoundingRule) -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/squareroot()","title":"func squareRoot() -> Self","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/sum()","title":"func sum() -> Self.Scalar","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/maskstorage","title":"Pixar.GfVec4d.MaskStorage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/one","title":"static var one: Self","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/simd-implementations","title":"SIMD Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/scalar","title":"Pixar.GfVec4d.Scalar","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/getarray()","title":"func getArray() -> [ScalarType]","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/scalar-implementations","title":"Scalar Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/filter(_:)-143e5","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/filter(_:)-9129","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/flatmap(_:)-200ci","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/flatmap(_:)-8rh98","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/makeiterator()","title":"func makeIterator() -> ScalarIterator<`Self`>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/map(_:)","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/max()-1iptd","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/min()-6ic15","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/sorted(using:)-1scoi","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/sorted(using:)-9b3v6","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/gfvec4d","title":"Pixar.GfVec4d","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/hddriver\/init(name:driver:)","title":"init(name: Hgi.Tokens, driver: Vt.Value)","type":"init"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/hddriver","title":"Pixar.HdDriver","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/sdfpath\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/sdfpath\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/sdfpath\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/sdfpath\/append(path:)","title":"func append(path: Sdf.Path) -> Sdf.Path","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/sdfpath\/getasstring()","title":"func getAsString() -> String","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/sdfpath","title":"Pixar.SdfPath","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/defineprim(_:type:)-19ehc","title":"func definePrim(String, type: Tf.Token) -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/defineprim(_:type:)-45gjq","title":"func definePrim(Sdf.Path, type: Tf.Token) -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/getmetadata(_:_:)-5tmq7","title":"func getMetadata(String, inout Tf.Token) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/getmetadata(_:_:)-7ewi4","title":"func getMetadata(String, inout Int) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/getmetadata(_:_:)-8a2oo","title":"func getMetadata(String, inout Double) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/getmetadata(_:_:)-8zf95","title":"func getMetadata(String, inout Float) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/getprim(at:)-1jtte","title":"func getPrim(at: String) -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/getprim(at:)-52ze9","title":"func getPrim(at: Sdf.Path) -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/getpseudoroot()","title":"func getPseudoRoot() -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/getrootlayer()","title":"func getRootLayer() -> SdfLayerHandle","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/hasauthoredmetadata(_:)","title":"func hasAuthoredMetadata(String) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/overrideprim(path:)-3liu9","title":"func overridePrim(path: String) -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/overrideprim(path:)-3m372","title":"func overridePrim(path: Sdf.Path) -> Usd.Prim","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/reload()","title":"func reload()","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/save()","title":"func save()","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/setmetadata(_:_:)-360k8","title":"func setMetadata(String, Double) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/setmetadata(_:_:)-3c5dq","title":"func setMetadata(String, Float) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/setmetadata(_:_:)-3fffv","title":"func setMetadata(String, Int) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/setmetadata(_:_:)-9ot40","title":"func setMetadata(String, Tf.Token) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_\/traverse()","title":"func traverse() -> [Usd.Prim]","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfrefptr_usdstage_","title":"Pixar.TfRefPtr<UsdStage>","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tftoken\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tftoken\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tftoken\/string","title":"var string: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tftoken\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tftoken\/==(_:_:)","title":"static func == (TfToken, TfToken) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/tftoken\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/tftoken","title":"Pixar.TfToken","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfweakptr_sdflayer_\/reload(force:)","title":"func reload(force: Bool)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfweakptr_sdflayer_\/save(force:)","title":"func save(force: Bool)","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfweakptr_sdflayer_\/set(doc:)","title":"func set(doc: String)","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/tfweakptr_sdflayer_","title":"Pixar.TfWeakPtr<SdfLayer>","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdattribute\/set(doc:)","title":"func set(doc: String)","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdattribute","title":"Pixar.UsdAttribute","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeombasiscurves\/define(_:path:)-4a4aa","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.BasisCurves","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeombasiscurves\/define(_:path:)-8h6rp","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.BasisCurves","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeombasiscurves","title":"Pixar.UsdGeomBasisCurves","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcamera\/define(_:path:)-4qxey","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.Camera","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcamera\/define(_:path:)-5cebm","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.Camera","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcamera","title":"Pixar.UsdGeomCamera","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcapsule\/define(_:path:)-48wd8","title":"static func define(UsdStageRefPtr, path: String) -> UsdGeom.Capsule","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcapsule\/define(_:path:)-656ej","title":"static func define(UsdStageRefPtr, path: Sdf.Path) -> UsdGeom.Capsule","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcapsule","title":"Pixar.UsdGeomCapsule","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcone\/define(_:path:)-2mtdj","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.Cone","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcone\/define(_:path:)-2yuu4","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.Cone","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcone","title":"Pixar.UsdGeomCone","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcube\/define(_:path:)-69zrz","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.Cube","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcube\/define(_:path:)-7hojg","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.Cube","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcube","title":"Pixar.UsdGeomCube","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcurves\/createcurvevertexcountsattr(_:writesparsely:)","title":"func createCurveVertexCountsAttr(Vt.Value, writeSparsely: Bool) -> Usd.Attribute","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcurves\/createwidthsattr(_:writesparsely:)","title":"func createWidthsAttr(Vt.Value, writeSparsely: Bool) -> Usd.Attribute","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcurves\/getcurvecount(timecode:)","title":"func getCurveCount(timeCode: Usd.TimeCode) -> Int","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcurves\/getcurvevertexcountsattr()","title":"func getCurveVertexCountsAttr() -> Usd.Attribute","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcurves\/getwidthsattr()","title":"func getWidthsAttr() -> Usd.Attribute","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcurves\/getwidthsinterpolation()","title":"func getWidthsInterpolation() -> Tf.Token","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcurves\/setwidthsinterpolation(_:)","title":"func setWidthsInterpolation(Tf.Token) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcurves\/computeextent(points:widths:extent:)","title":"static func computeExtent(points: Vt.Vec3fArray, widths: Vt.FloatArray, extent: inout Vt.Vec3fArray) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcurves\/computeextent(points:widths:transform:extent:)","title":"static func computeExtent(points: Vt.Vec3fArray, widths: Vt.FloatArray, transform: Gf.Matrix4d, extent: inout Vt.Vec3fArray) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcurves\/get(_:path:)-29yii","title":"static func get(Usd.StageRefPtr, path: String) -> UsdGeom.Curves","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcurves\/get(_:path:)-83dfg","title":"static func get(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.Curves","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcurves","title":"Pixar.UsdGeomCurves","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcylinder\/define(_:path:)-1hytx","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.Cylinder","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcylinder\/define(_:path:)-3bc7w","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.Cylinder","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomcylinder","title":"Pixar.UsdGeomCylinder","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeommesh\/define(_:path:)-1t4sb","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.Mesh","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeommesh\/define(_:path:)-9lf96","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.Mesh","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeommesh","title":"Pixar.UsdGeomMesh","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomnurbscurves\/define(_:path:)-2diq0","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.NurbsCurves","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomnurbscurves\/define(_:path:)-396vv","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.NurbsCurves","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomnurbscurves","title":"Pixar.UsdGeomNurbsCurves","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomnurbspatch\/define(_:path:)-9hgz7","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.NurbsPatch","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomnurbspatch\/define(_:path:)-9pd2m","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.NurbsPatch","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomnurbspatch","title":"Pixar.UsdGeomNurbsPatch","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomplane\/define(_:path:)-67e6a","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.Plane","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomplane\/define(_:path:)-9s8ad","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.Plane","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomplane","title":"Pixar.UsdGeomPlane","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeompoints\/define(_:path:)-2vhaa","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.Points","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeompoints\/define(_:path:)-7293","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.Points","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeompoints","title":"Pixar.UsdGeomPoints","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomsphere\/define(_:path:)-4r1u7","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.Sphere","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomsphere\/define(_:path:)-9d6fr","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.Sphere","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomsphere","title":"Pixar.UsdGeomSphere","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomsubset\/define(_:path:)-4bj2l","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.Subset","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomsubset\/define(_:path:)-77yhu","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.Subset","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomsubset","title":"Pixar.UsdGeomSubset","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomxform\/define(_:path:)-46ad5","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdGeom.Xform","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomxform\/define(_:path:)-91ujj","title":"static func define(Usd.StageRefPtr, path: String) -> UsdGeom.Xform","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomxform","title":"Pixar.UsdGeomXform","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomxformop\/set(_:time:)-25ldi","title":"func set(GfVec2d, time: UsdTimeCode) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomxformop\/set(_:time:)-52wp9","title":"func set(GfVec3f, time: UsdTimeCode) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomxformop\/set(_:time:)-723f7","title":"func set(Double, time: UsdTimeCode) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomxformop\/set(_:time:)-8jvmg","title":"func set(GfVec3d, time: UsdTimeCode) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomxformop\/set(_:time:)-9fh43","title":"func set(GfVec2f, time: UsdTimeCode) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomxformop\/set(_:time:)-ygc1","title":"func set(Float, time: UsdTimeCode) -> Bool","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdgeomxformop","title":"Pixar.UsdGeomXformOp","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxcylinderlight\/define(_:path:)-1gphy","title":"static func define(UsdStageRefPtr, path: String) -> UsdLux.CylinderLight","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxcylinderlight\/define(_:path:)-8cvqk","title":"static func define(UsdStageRefPtr, path: Sdf.Path) -> UsdLux.CylinderLight","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxcylinderlight","title":"Pixar.UsdLuxCylinderLight","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxdisklight\/define(_:path:)-4p5yv","title":"static func define(UsdStageRefPtr, path: Sdf.Path) -> UsdLux.DiskLight","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxdisklight\/define(_:path:)-51p72","title":"static func define(UsdStageRefPtr, path: String) -> UsdLux.DiskLight","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxdisklight","title":"Pixar.UsdLuxDiskLight","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxdistantlight\/define(_:path:)-235ot","title":"static func define(UsdStageRefPtr, path: Sdf.Path) -> UsdLux.DistantLight","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxdistantlight\/define(_:path:)-84ude","title":"static func define(UsdStageRefPtr, path: String) -> UsdLux.DistantLight","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxdistantlight","title":"Pixar.UsdLuxDistantLight","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxdomelight\/define(_:path:)-5n0ky","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdLux.DomeLight","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxdomelight\/define(_:path:)-76fgz","title":"static func define(Usd.StageRefPtr, path: String) -> UsdLux.DomeLight","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxdomelight","title":"Pixar.UsdLuxDomeLight","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxgeometrylight\/define(_:path:)-1g2z","title":"static func define(Usd.StageRefPtr, path: String) -> UsdLux.GeometryLight","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxgeometrylight\/define(_:path:)-6ztqc","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdLux.GeometryLight","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxgeometrylight","title":"Pixar.UsdLuxGeometryLight","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxlightapi\/apply(_:)","title":"static func apply(Usd.Prim) -> UsdLux.LuxLightAPI","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxlightapi","title":"Pixar.UsdLuxLightAPI","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxportallight\/define(_:path:)-5wiy7","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdLux.PortalLight","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxportallight\/define(_:path:)-5y062","title":"static func define(Usd.StageRefPtr, path: String) -> UsdLux.PortalLight","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxportallight","title":"Pixar.UsdLuxPortalLight","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxrectlight\/define(_:path:)-3dyv3","title":"static func define(Usd.StageRefPtr, path: String) -> UsdLux.RectLight","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxrectlight\/define(_:path:)-9uxg6","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdLux.RectLight","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxrectlight","title":"Pixar.UsdLuxRectLight","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxspherelight\/define(_:path:)-4q32m","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdLux.SphereLight","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxspherelight\/define(_:path:)-7ynau","title":"static func define(Usd.StageRefPtr, path: String) -> UsdLux.SphereLight","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxspherelight","title":"Pixar.UsdLuxSphereLight","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxvolumelightapi\/apply(_:)","title":"static func apply(Usd.Prim) -> UsdLux.VolumeLightAPI","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdluxvolumelightapi","title":"Pixar.UsdLuxVolumeLightAPI","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprim\/typename","title":"var typeName: Tf.Token","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprim\/getpath()","title":"func getPath() -> Sdf.Path","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprim\/getstage()","title":"func getStage() -> UsdStageWeakPtr","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprim\/set(doc:)","title":"func set(doc: String)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprim\/children","title":"var children: [any Prim]","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprim\/name","title":"var name: Tf.Token","type":"property"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprim\/path","title":"var path: Sdf.Path","type":"property"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprim\/prim-implementations","title":"Prim Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprim","title":"Pixar.UsdPrim","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprimrange\/next()","title":"func next() -> Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprimrange\/element","title":"Pixar.UsdPrimRange.Element","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprimrange\/iteratorprotocol-implementations","title":"IteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdprimrange","title":"Pixar.UsdPrimRange","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeinput\/set(_:time:)-3wve7","title":"func set(VtValue, time: UsdTimeCode) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeinput\/set(_:time:)-3z8hc","title":"func set(GfVec2f, time: UsdTimeCode) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeinput\/set(_:time:)-8xdun","title":"func set(GfVec3f, time: UsdTimeCode) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeinput\/set(_:time:)-91s13","title":"func set(Float, time: UsdTimeCode) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeinput\/set(_:time:)-9dqwu","title":"func set(GfVec2d, time: UsdTimeCode) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeinput\/set(_:time:)-9f33i","title":"func set(GfVec3d, time: UsdTimeCode) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeinput\/set(_:time:)-9h986","title":"func set(Double, time: UsdTimeCode) -> Bool","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeinput","title":"Pixar.UsdShadeInput","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerial\/createsurfaceoutput(rendercontext:)-5pi94","title":"func createSurfaceOutput(renderContext: UsdShade.Tokens) -> UsdShade.Output","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerial\/createsurfaceoutput(rendercontext:)-7ekx","title":"func createSurfaceOutput(renderContext: Tf.Token) -> UsdShade.Output","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerial\/define(_:path:)-5rbhb","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdShade.Material","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerial\/define(_:path:)-9v9g4","title":"static func define(Usd.StageRefPtr, path: String) -> UsdShade.Material","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerial","title":"Pixar.UsdShadeMaterial","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerialbindingapi\/bind(_:strength:purpose:)","title":"func bind(UsdShade.Material, strength: UsdShade.Tokens, purpose: UsdShade.Tokens) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerialbindingapi\/apply(_:)-1y75j","title":"static func apply(UsdGeomSphere) -> UsdShade.MaterialBindingAPI","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerialbindingapi\/apply(_:)-3c9zi","title":"static func apply(UsdGeomCone) -> UsdShade.MaterialBindingAPI","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerialbindingapi\/apply(_:)-52aq","title":"static func apply(UsdGeomCylinder) -> UsdShade.MaterialBindingAPI","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerialbindingapi\/apply(_:)-559u1","title":"static func apply(UsdGeomCapsule) -> UsdShade.MaterialBindingAPI","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerialbindingapi\/apply(_:)-5p1pz","title":"static func apply(Usd.Prim) -> UsdShade.MaterialBindingAPI","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerialbindingapi\/apply(_:)-671i7","title":"static func apply(UsdGeomPlane) -> UsdShade.MaterialBindingAPI","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerialbindingapi\/apply(_:)-oniu","title":"static func apply(UsdGeomCube) -> UsdShade.MaterialBindingAPI","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadematerialbindingapi","title":"Pixar.UsdShadeMaterialBindingAPI","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeoutput\/connectto(source:at:from:type:)-840dc","title":"func connectTo(source: UsdShade.ConnectableAPI, at: UsdShade.Tokens, from: UsdShade.AttributeType, type: Sdf.ValueTypeName) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeoutput\/connectto(source:at:from:type:)-d1ys","title":"func connectTo(source: UsdShade.ConnectableAPI, at: Tf.Token, from: UsdShade.AttributeType, type: Sdf.ValueTypeName) -> Bool","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeoutput\/connectto(source:at:from:type:)-vjts","title":"func connectTo(source: UsdShade.ConnectableAPI, at: String, from: UsdShade.AttributeType, type: Sdf.ValueTypeName) -> Bool","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeoutput","title":"Pixar.UsdShadeOutput","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/connectableapi()","title":"func connectableAPI() -> UsdShade.ConnectableAPI","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/createidattr(_:writesparsely:)-27re0","title":"func createIdAttr(String, writeSparsely: Bool) -> Usd.Attribute","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/createidattr(_:writesparsely:)-3n58o","title":"func createIdAttr(Tf.Token, writeSparsely: Bool) -> Usd.Attribute","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/createidattr(_:writesparsely:)-urui","title":"func createIdAttr(ShaderId, writeSparsely: Bool) -> Usd.Attribute","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/createinput(for:type:)-14ya0","title":"func createInput(for: Tf.Token, type: SdfValueTypeNameType) -> UsdShade.Input","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/createinput(for:type:)-45xbd","title":"func createInput(for: InputName, type: SdfValueTypeNameType) -> UsdShade.Input","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/createinput(for:type:)-9p8f2","title":"func createInput(for: String, type: SdfValueTypeNameType) -> UsdShade.Input","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/define(_:path:)-7ip2v","title":"static func define(Usd.StageRefPtr, path: String) -> UsdShade.Shader","type":"method"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/define(_:path:)-iosi","title":"static func define(Usd.StageRefPtr, path: Sdf.Path) -> UsdShade.Shader","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/bias","title":"case bias","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/clearcoat","title":"case clearcoat","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/clearcoatroughness","title":"case clearcoatRoughness","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/diffusecolor","title":"case diffuseColor","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/displacement","title":"case displacement","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/emissivecolor","title":"case emissiveColor","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/fallback","title":"case fallback","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/file","title":"case file","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/ior","title":"case ior","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/metallic","title":"case metallic","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/occlusion","title":"case occlusion","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/opacity","title":"case opacity","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/roughness","title":"case roughness","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/sourcecolorspace","title":"case sourceColorSpace","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/specularcolor","title":"case specularColor","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/st","title":"case st","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/wraps","title":"case wrapS","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/wrapt","title":"case wrapT","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/gettoken()","title":"func getToken() -> Tf.Token","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/inputname","title":"Pixar.UsdShadeShader.InputName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/shaderid\/usdpreviewsurface","title":"case usdPreviewSurface","type":"case"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/shaderid\/usduvtexture","title":"case usdUVTexture","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/shaderid\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/shaderid\/gettoken()","title":"func getToken() -> Tf.Token","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/shaderid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/shaderid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/shaderid\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/shaderid\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/shaderid\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader\/shaderid","title":"Pixar.UsdShadeShader.ShaderId","type":"enum"}],"path":"\/documentation\/pixarusd\/__objc\/pixar\/usdshadeshader","title":"Pixar.UsdShadeShader","type":"extension"}],"path":"\/documentation\/pixarusd\/__objc\/pixar","title":"Pixar","type":"extension"},{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/boost\/iterator_range_usdprimsiblingiterator_\/next()","title":"func next() -> Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/pixarusd\/__objc\/boost\/iterator_range_usdprimsiblingiterator_\/element","title":"boost.iterator_range<UsdPrimSiblingIterator>.Element","type":"typealias"}],"path":"\/documentation\/pixarusd\/__objc\/boost\/iterator_range_usdprimsiblingiterator_\/iteratorprotocol-implementations","title":"IteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/pixarusd\/__objc\/boost\/iterator_range_usdprimsiblingiterator_","title":"boost.iterator_range<UsdPrimSiblingIterator>","type":"extension"}],"path":"\/documentation\/pixarusd\/__objc\/boost","title":"boost","type":"extension"}],"path":"\/documentation\/pixarusd\/__objc","title":"__ObjC","type":"extension"}],"path":"\/documentation\/pixarusd","title":"PixarUSD","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}